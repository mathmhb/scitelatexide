# ASP.API file for SciTE by philipmateescu@hotmail.com


Response.Response.Cookies() COLLECTION. Specifies cookie values. Using this collection, you can set cookie values.  
Response.Buffer() PROPERTY. Indicates whether page output is buffered. 
Response.CacheControl() PROPERTY. Determines whether proxy servers are able to cache the output generated by ASP. 
Response.Charset() PROPERTY. Appends the name of the character set to the content-type header. 
Response.ContentType() PROPERTY. Specifies the HTTP content type for the response.  
Response.Expires() PROPERTY. Specifies the length of time before a page cached on a browser expires. 
Response.ExpiresAbsolute() PROPERTY. Specifies the date and time on which a page cached on a browser expires. 
Response.IsClientConnected() PROPERTY. Indicates whether the client has disconnected from the server. 
Response.Pics() PROPERTY. Adds the value of a PICS label to the pics-label field of the response header. 
Response.Status() PROPERTY. The value of the status line returned by the server.  
Response.AddHeader(name,value) METHOD. Sets the HTML header name to value.  
Response.AppendToLog(string) METHOD. Adds a string to the end of the Web server log entry for this request. 
Response.BinaryWrite(data) METHOD. Writes the given information to the current HTTP output without any character-set conversion. 
Response.Clear() METHOD. Erases any buffered HTML output.  
Response.End() METHOD. Stops processing the .asp file and returns the current result.  
Response.Flush() METHOD. Sends buffered output immediately. 
Response.Redirect(URL) METHOD. Sends a redirect message to the browser, causing it to attempt to connect to a different URL.  
Response.Write(variant) METHOD. Writes a variable to the current HTTP output as a string.  

Request.ClientCertificate() COLLECTION. The values of fields stored in the client certificate that is sent in the HTTP request. 
Request.Cookies() COLLECTION. The values of cookies sent in the HTTP request.  
Request.Form(element) COLLECTION. The values of form elements in the HTTP request body.  
Request.QueryString(variable) COLLECTION. The values of variables in the HTTP query string.  
Request.ServerVariables(server environment variable) COLLECTION. The values of predetermined environment variables.  
Request.TotalBytes() PROPERTY. Read-only. Specifies the total number of bytes the client is sending in the body of the request. 
Request.BinaryRead(count) METHOD. Retrieves data sent to the server from the client as part of a POST request.  

Application.Contents() COLLECTION. Contains all of the items that have been added to the Application through script commands. 
Application.StaticObjects() COLLECTION. Contains all of the objects added to the session with the <OBJECT> tag.  
Application.Lock() METHOD. The Lock method prevents other clients from modifying Application object properties. 
Application.Unlock() METHOD. The Unlock method allows other clients to modify Application object properties. 

Server.ScriptTimeout() PROPERTY. The amount of time that a script can run before it times out. 
Server.CreateObject(progID) METHOD. Creates an instance of a server component. 
Server.HTMLEncode(string) METHOD. Applies HTML encoding to the specified string.  
Server.MapPath(Path) METHOD. Maps the specified virtual path, either the absolute path on the current server or the path relative to the current page, into a physical path. 
Server.URLEncode(string) METHOD. Applies URL encoding rules, including escape characters, to the string.  


Session.Contents() COLLECTION. Contains the items that you have added to the session with script commands.  
Session.StaticObjects() COLLECTION. Contains the objects created with the <OBJECT> tag and given session scope. 
Session.CodePage() PROPERTY. The codepage that will be used for symbol mapping. 
Session.LCID() PROPERTY. The locale identifier. 
Session.SessionID() PROPERTY. Returns the session identification for this user.  
Session.Timeout() PROPERTY. The timeout period for the session state for this application, in minutes. 
Session.Abandon() METHOD. This method destroys a Session object and releases its resources. 


# shortcuts

rs.Fields(name) COLLECTION. Gets the value of a field
rs.Close() METHOD. Closes an open object and any dependent objects. 
rs.Move(NumRecord, Start) METHOD. Moves the position of the current record in a Recordset object
rs.MoveFirst() METHOD. Moves to the first record and makes that record the current record.
rs.MoveLast() METHOD. Moves to the last record and makes that record the current record.
rs.MoveNext() METHOD. Moves to the next record and makes that record the current record.
rs.MovePrevious() METHOD. Moves to the previous record and makes that record the current record. 
rs.Open(Source, ActiveConnection, CursorType, LockType, Options) METHOD. Opens a cursor.
rs.Supports(CursorOption) METHOD. (adAddNew, adApproxPosition, adBookmark, adDelete, adHoldRecords, adMovePrevious, adResync, adUpdate, adUpdateBatch)
rs.AbsolutePage() PROPERTY. Specifies in which page the current record resides. 
rs.AbsolutePosition() PROPERTY. Specifies the ordinal position of a Recordset object's current record. 
rs.ActiveConnection() PROPERTY. Indicates to which Connection object the specified Command or Recordset object currently belongs. 
rs.BOF() PROPERTY. BOF indicates that the current record position is before the first record in a Recordset object.
rs.Bookmark() PROPERTY. Returns a bookmark that uniquely identifies the current record or sets the current record to the record identified by a valid bookmark. 
rs.CacheSize() PROPERTY. Indicates the number of records from a Recordset object that are cached locally in memory. 
rs.CursorLocation() PROPERTY. Sets or returns the location of the cursor engine. (adUseClient, adUseServer)
rs.CursorType() PROPERTY. Indicates the type of cursor. (adOpenForwardOnly, adOpenKeyset, adOpenDynamic, adOpenStatic)
rs.EditMode() PROPERTY. Indicates the editing status of the current record. (adEditNone, adEditInProgess, adEditAdd)
rs.EOF() PROPERTY. EOF indicates that the current record position is after the last record in a Recordset object.
rs.Filter() PROPERTY. Indicates a filter for data. (adFilterNone, adFilterPendingRecords, adFilterAffectedRecords, adFilterFetchedRecords)
rs.LockType() PROPERTY. Indicates the type of locks placed on records during editing. (adLockReadOnly, adLockPessimistic, adLockOptimistic, adLockBatchOptimistic)
rs.MarshalOptions() PROPERTY. Indicates which records are to be marshaled back to the server. (adMarshallAll, adMarshallModifiedOnly)
rs.MaxRecords() PROPERTY. Indicates the maximum number of records to return to a Recordset from a query. (Long, 0 = no limit)
rs.PageCount() PROPERTY. Indicates how many pages of data the Recordset object contains. 
rs.PageSize() PROPERTY. Indicates how many records constitute one page in the Recordset. 
rs.RecordCount() PROPERTY. Indicates the current number of records in a Recordset object.
rs.Source() PROPERTY. Indicates the source for the data in a Recordset object (Command object, SQL statement, table name, or stored procedure).
rs.State() PROPERTY. Describes the current state of an object. (adStateClosed, adStateOpen)
rs.Status () PROPERTY. Indicates the status of the current record with respect to batch updates or other bulk operations.

cmd.Parameters() COLLECTION. All the Parameter objects of a Command object. (Append, Delete, Item, Refresh)
cmd.Properties() COLLECTION. All the Property objects for a specific instance of an object. (Item, Refresh)
cmd.CreateParameter(Name, Type, Direction, Size, Value) METHOD. Creates a new Parameter object with the specified properties.
cmd.Execute(RecordsAffected, Parameters, Options) METHOD. Executes the query, SQL statement, or stored procedure specified in the CommandText property.
cmd.ActiveConnection() PROPERTY. Indicates to which Connection object the specified Command or Recordset object currently belongs.
cmd.CommandText() PROPERTY. Contains the text of a command that you want to issue against a provider.
cmd.CommandTimeout() PROPERTY. Indicates how long to wait while executing a command before terminating the attempt and generating an error. 
cmd.CommandType() PROPERTY. Indicates the type. (adCmdText, adCmdTable, adCmdStoredProc, adCmdUknown)
cmd.Name() PROPERTY. Indicates the name of an object. 
cmd.Prepared() PROPERTY. Indicates whether or not to save a compiled version of a command before execution.
cmd.State() PROPERTY. Describes the current state of an object. (adStateClosed, adStateOpen)