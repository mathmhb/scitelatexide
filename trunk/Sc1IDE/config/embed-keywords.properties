[Keywords for ada files]
KEYWORDS_ada=abort abstract accept access aliased all array at begin body case constant declare delay delta digits do else elsif end entry exception exit for function generic goto if in is limited loop new null of others out package pragma private procedure protected raise range record renames requeue return reverse select separate subtype tagged task terminate then type until use when while with abs and mod not or rem xor
[Keywords for asm files]
KEYWORDS_asm=$(cpu_instruction) $(cpu_instruction2)
KEYWORDS2_asm=$(fpu_instruction)
KEYWORDS3_asm=$(register)
KEYWORDS4_asm=$(directive) $(directive_nasm)
KEYWORDS5_asm=$(directive_operand) $(directive_operand_nasm)
KEYWORDS6_asm=$(ext_instruction)

# these keywords are taken from the masm book (v6.13)
# updated with Intel Pentium 4, MMX, SSE, SSE2 instructions from NASM
# 	(note that some are undocumented instructions)

cpu_instruction=aaa aad aam aas adc add and call cbw \
	clc cld cli cmc cmp cmps cmpsb cmpsw cwd daa das dec div esc hlt \
	idiv imul in inc int into iret ja jae jb jbe jc jcxz je jg jge jl \
	jle jmp jna jnae jnb jnbe jnc jne jng jnge jnl jnle jno jnp jns \
	jnz jo jp jpe jpo js jz lahf lds lea les lods lodsb lodsw loop \
	loope loopew loopne loopnew loopnz loopnzw loopw loopz loopzw \
	mov movs movsb movsw mul neg nop not or out pop popf push pushf \
	rcl rcr ret retf retn rol ror sahf sal sar sbb scas scasb scasw \
	shl shr stc std sti stos stosb stosw sub test wait xchg xlat \
	xlatb xor \
	bound enter ins insb insw leave outs outsb outsw popa pusha pushw \
	arpl lar lsl sgdt sidt sldt smsw str verr verw clts lgdt lidt lldt lmsw ltr \
	bsf bsr bt btc btr bts cdq cmpsd cwde insd iretd iretdf  iretf \
	jecxz lfs lgs lodsd loopd  looped  loopned  loopnzd  loopzd  lss \
	movsd movsx movzx outsd popad popfd pushad pushd  pushfd scasd seta \
	setae setb setbe setc sete setg setge setl setle setna setnae setnb \
	setnbe setnc setne setng setnge setnl setnle setno setnp setns \
	setnz seto setp setpe setpo sets setz shld shrd stosd \
	bswap cmpxchg invd  invlpg  wbinvd  xadd \
	lock rep repe repne repnz repz

# these are mostly non-MMX/SSE/SSE2 486+ instructions

cpu_instruction2=cflush cpuid emms femms \
	cmovo cmovno cmovb cmovc cmovnae cmovae cmovnb cmovnc \
	cmove cmovz cmovne cmovnz cmovbe cmovna cmova cmovnbe \
	cmovs cmovns cmovp cmovpe cmovnp cmovpo cmovl cmovnge \
	cmovge cmovnl cmovle cmovng cmovg cmovnle \
	cmpxchg486 cmpxchg8b  \
	loadall loadall286 ibts icebp int1 int3 int01 int03 iretw \
	popaw popfw pushaw pushfw rdmsr rdpmc rdshr rdtsc \
	rsdc rsldt rsm rsts salc smi smint smintold svdc svldt svts \
	syscall sysenter sysexit sysret ud0 ud1 ud2 umov xbts wrmsr wrshr

# fpu instructions, updated for 486+

fpu_instruction=f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcom fcomp fcompp fdecstp \
	fdisi fdiv fdivp fdivr fdivrp feni ffree fiadd ficom ficomp fidiv \
	fidivr fild fimul fincstp finit fist fistp fisub fisubr fld fld1 \
	fldcw fldenv fldenvw fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul \
	fmulp fnclex fndisi fneni fninit fnop fnsave fnsavew fnstcw fnstenv \
	fnstenvw fnstsw fpatan fprem fptan frndint frstor frstorw fsave \
	fsavew fscale fsqrt fst fstcw fstenv fstenvw fstp fstsw fsub fsubp \
	fsubr fsubrp ftst fwait fxam fxch fxtract fyl2x fyl2xp1 \
	fsetpm fcos fldenvd fnsaved fnstenvd fprem1 frstord fsaved fsin fsincos \
	fstenvd fucom fucomp fucompp fcomi fcomip ffreep \
	fcmovb fcmove fcmovbe fcmovu fcmovnb fcmovne fcmovnbe fcmovnu

# these are MMX, SSE, SSE2 instructions

ext_instruction=addpd addps addsd addss andpd andps andnpd andnps \
	cmpeqpd cmpltpd cmplepd cmpunordpd cmpnepd cmpnltpd cmpnlepd cmpordpd \
	cmpeqps cmpltps cmpleps cmpunordps cmpneps cmpnltps cmpnleps cmpordps \
	cmpeqsd cmpltsd cmplesd cmpunordsd cmpnesd cmpnltsd cmpnlesd cmpordsd \
	cmpeqss cmpltss cmpless cmpunordss cmpness cmpnltss cmpnless cmpordss \
	comisd comiss cvtdq2pd cvtdq2ps cvtpd2dq cvtpd2pi cvtpd2ps \
	cvtpi2pd cvtpi2ps cvtps2dq cvtps2pd cvtps2pi cvtss2sd cvtss2si \
	cvtsd2si cvtsd2ss cvtsi2sd cvtsi2ss \
	cvttpd2dq cvttpd2pi cvttps2dq cvttps2pi cvttsd2si cvttss2si \
	divpd divps divsd divss fxrstor fxsave ldmxscr lfence mfence \
	maskmovdqu maskmovdq maxpd maxps paxsd maxss minpd minps minsd minss \
	movapd movaps movdq2q movdqa movdqu movhlps movhpd movhps movd movq \
	movlhps movlpd movlps movmskpd movmskps movntdq movnti movntpd movntps \
	movntq movq2dq movsd movss movupd movups mulpd mulps mulsd mulss \
	orpd orps packssdw packsswb packuswb paddb paddsb paddw paddsw \
	paddd paddsiw paddq paddusb paddusw pand pandn pause paveb pavgb pavgw \
	pavgusb pdistib pextrw pcmpeqb pcmpeqw pcmpeqd pcmpgtb pcmpgtw pcmpgtd \
	pf2id pf2iw pfacc pfadd pfcmpeq pfcmpge pfcmpgt pfmax pfmin pfmul \
	pmachriw pmaddwd pmagw pmaxsw pmaxub pminsw pminub pmovmskb \
	pmulhrwc pmulhriw pmulhrwa pmulhuw pmulhw pmullw pmuludq \
	pmvzb pmvnzb pmvlzb pmvgezb pfnacc pfpnacc por prefetch prefetchw \
	prefetchnta prefetcht0 prefetcht1 prefetcht2 pfrcp pfrcpit1 pfrcpit2 \
	pfrsqit1 pfrsqrt pfsub pfsubr pi2fd pf2iw pinsrw psadbw pshufd \
	pshufhw pshuflw pshufw psllw pslld psllq pslldq psraw psrad \
	psrlw psrld psrlq psrldq psubb psubw psubd psubq psubsb psubsw \
	psubusb psubusw psubsiw pswapd punpckhbw punpckhwd punpckhdq punpckhqdq \
	punpcklbw punpcklwd punpckldq punpcklqdq pxor rcpps rcpss \
	rsqrtps rsqrtss sfence shufpd shufps sqrtpd sqrtps sqrtsd sqrtss \
	stmxcsr subpd subps subsd subss ucomisd ucomiss \
	unpckhpd unpckhps unpcklpd unpcklps xorpd xorps

register=ah al ax bh bl bp bx ch cl cr0 cr2 cr3 cr4 cs \
	cx dh di dl dr0 dr1 dr2 dr3 dr6 dr7 ds dx eax ebp ebx ecx edi edx \
	es esi esp fs gs si sp ss st tr3 tr4 tr5 tr6 tr7 \
	st0 st1 st2 st3 st4 st5 st6 st7 mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 \
	xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7

# masm directives

directive=.186 .286 .286c .286p .287 .386 .386c .386p .387 .486 .486p \
	.8086 .8087 .alpha .break .code .const .continue .cref .data .data?  \
	.dosseg .else .elseif .endif .endw .err .err1 .err2 .errb \
	.errdef .errdif .errdifi .erre .erridn .erridni .errnb .errndef \
	.errnz .exit .fardata .fardata? .if .lall .lfcond .list .listall \
	.listif .listmacro .listmacroall  .model .no87 .nocref .nolist \
	.nolistif .nolistmacro .radix .repeat .sall .seq .sfcond .stack \
	.startup .tfcond .type .until .untilcxz .while .xall .xcref \
	.xlist alias align assume catstr comm comment db dd df dosseg dq \
	dt dup dw echo else elseif elseif1 elseif2 elseifb elseifdef elseifdif \
	elseifdifi elseife elseifidn elseifidni elseifnb elseifndef end \
	endif endm endp ends eq equ even exitm extern externdef extrn for \
	forc ge goto group gt high highword if if1 if2 ifb ifdef ifdif \
	ifdifi ife  ifidn ifidni ifnb ifndef include includelib instr invoke \
	irp irpc label le length lengthof local low lowword lroffset \
	lt macro mask mod .msfloat name ne offset opattr option org %out \
	page popcontext proc proto ptr public purge pushcontext record \
	repeat rept seg segment short size sizeof sizestr struc struct \
	substr subtitle subttl textequ this title type typedef union while width

directive_operand=$ ? @b @f addr basic byte c carry? dword \
	far far16 fortran fword near near16 overflow? parity? pascal qword  \
	real4  real8 real10 sbyte sdword sign? stdcall sword syscall tbyte \
	vararg word zero? flat near32 far32 \
	abs all assumes at casemap common compact \
	cpu dotname emulator epilogue error export expr16 expr32 farstack flat \
	forceframe huge language large listing ljmp loadds m510 medium memory \
	nearstack nodotname noemulator nokeyword noljmp nom510 none nonunique \
	nooldmacros nooldstructs noreadonly noscoped nosignextend nothing \
	notpublic oldmacros oldstructs os_dos para private prologue radix \
	readonly req scoped setif2 smallstack tiny use16 use32 uses \

# nasm directives, mostly complete, does not parse properly the following: %!<env>, %%, %+, %+n %-n, %{n}

directive_nasm=db dw dd dq dt resb resw resd resq rest incbin equ times \
	%define %idefine %xdefine %xidefine %undef %assign %iassign \
	%strlen %substr %macro %imacro %endmacro %rotate .nolist \
	%if %elif %else %endif %ifdef %ifndef %elifdef %elifndef \
	%ifmacro %ifnmacro %elifmacro %elifnmacro %ifctk %ifnctk %elifctk %elifnctk \
	%ifidn %ifnidn %elifidn %elifnidn %ifidni %ifnidni %elifidni %elifnidni \
	%ifid %ifnid %elifid %elifnid %ifstr %ifnstr %elifstr %elifnstr \
	%ifnum %ifnnum %elifnum %elifnnum %error %rep %endrep %exitrep \
	%include %push %pop %repl struct endstruc istruc at iend align alignb \
	%arg %stacksize %local %line \
	bits use16 use32 section absolute extern global common cpu org \
	section group import export

directive_operand_nasm=a16 a32 o16 o32 byte word dword nosplit $ $$ seq wrt \
	flat large small .text .data .bss near far \
	%0 %1 %2 %3 %4 %5 %6 %7 %8 %9
[Keywords for autoit files]
KEYWORDS_au3=and byref case continueloop dim do else elseif endfunc endif endselect exit exitloop for func global if local next not or return select step then to until wend while exit

KEYWORDS2_au3=abs acos adlibdisable adlibenable asc asin atan autoitsetoption autoitwingettitle autoitwinsettitle \
  bitand bitnot bitor bitshift bitxor blockinput break call cdtray chr clipget clipput controlclick \
  controlcommand controldisable controlenable controlfocus controlgetfocus controlgetpos controlgettext \
  controlhide controlmove controlsend controlsettext controlshow cos dec dircopy dircreate dirmove \
  dirremove drivegetdrive drivegetfilesystem drivegetlabel drivegetserial drivegettype drivesetlabel \
  drivespacefree drivespacetotal drivestatus envget envset envupdate eval exp filechangedir fileclose \
  filecopy filecreateshortcut filedelete fileexists filefindfirstfile filefindnextfile filegetattrib \
  filegetlongname filegetshortname filegetsize filegettime filegetversion fileinstall filemove \
  fileopen fileopendialog fileread filereadline filerecycle filerecycleempty filesavedialog fileselectfolder \
  filesetattrib filesettime filewrite filewriteline guicreate guicreateex guidefaultfont guidelete \
  guigetcontrolstate guihide guimsg guiread guirecvmsg guisendmsg guisetcontrol guisetcontroldata \
  guisetcontrolex guisetcontrolfont guisetcontrolnotify guisetcoord guisetcursor guishow guiwaitclose \
  guiwrite hex hotkeyset inidelete iniread iniwrite inputbox int isadmin isarray isdeclared isfloat \
  isint isnumber isstring log memgetstats mod mouseclick mouseclickdrag mousedown mousegetcursor \
  mousegetpos mousemove mouseup mousewheel msgbox number pixelchecksum pixelgetcolor pixelsearch \
  processclose processexists processsetpriority processwait processwaitclose progressoff progresson \
  progressset random regdelete regenumkey regenumval regread regwrite round run runasset runwait \
  send seterror shutdown sin sleep soundplay soundsetwavevolume splashimageon splashoff splashtexton \
  sqrt statusbargettext string stringaddcr stringformat stringinstr stringisalnum stringisalpha \
  stringisascii stringisdigit stringisfloat stringisint stringislower stringisspace stringisupper \
  stringisxdigit stringleft stringlen stringlower stringmid stringreplace stringright stringsplit \
  stringstripcr stringstripws stringtrimleft stringtrimright stringupper tan timerstart timerstop \
  tooltip traytip ubound urldownloadtofile winactivate winactive winclose winexists wingetcaretpos \
  wingetclasslist wingetclientsize wingethandle wingetpos wingetstate wingettext wingettitle \
  winkill winmenuselectitem winminimizeall winminimizeallundo winmove winsetontop winsetstate \
  winsettitle winwait winwaitactive winwaitclose winwaitnotactive

KEYWORDS3.au3= \
 @appdatacommondir @appdatadir @autoitversion @commonfilesdir @compiled @computername @comspec \
  @cr @crlf @desktopcommondir @desktopdir @desktopheight @desktopwidth @documentscommondir @error \
  @favoritescommondir @favoritesdir @homedrive @homepath @homeshare @hour @ipaddress1 @ipaddress2 \
  @ipaddress3 @ipaddress4 @lf @logondnsdomain @logondomain @logonserver @mday @min @mon @mydocumentsdir \
  @osbuild @oslang @osservicepack @ostype @osversion @programfilesdir @programscommondir @programsdir \
  @scriptdir @scriptfullpath @scriptname @sec @startmenucommondir @startmenudir @startupcommondir \
  @startupdir @sw_hide @sw_maximize @sw_minimize @sw_restore @sw_show @systemdir @tab @tempdir \
  @userprofiledir @username @wday @windowsdir @workingdir @yday @year

KEYWORDS4_au3= {!} {#} {^} {{} {}} {+} {alt} {altdown} {altup} {appskey} {asc} {backspace} {browser_back} \
{browser_favorites} {browser_forward} {browser_home} {browser_refresh} {browser_search} {browser_stop} {bs} {capslock} {ctrlbreak} \
{ctrldown} {ctrlup} {del} {delete} {down} {end} {enter} {esc} {escape} {f1} {f10} {f11} {f12} {f2} {f3} {f4} {f5} {f6} {f7} {f8} {f9} \
{home} {ins} {insert} {lalt} {launch_app1} {launch_app2} {launch_mail} {launch_media} {lctrl} {left} {lshift} {lwin} \
{lwindown} {media_next} {media_play_pause} {media_prev} {media_stop} {numlock} \
{numpad0} {numpad1} {numpad2} {numpad3} {numpad4} {numpad5} {numpad6} {numpad7} {numpad8} {numpad9} \
{numpadadd} {numpaddiv} {numpaddot} {numpadenter} {numpadmult} {numpadsub} {pause} {pgdn} {pgup} \
{printscreen} {ralt} {rctrl} {right} {rshift} {rwin} {rwindown} {scrolllock} {shiftdown} {shiftup} {sleep} {space} {tab} {up} \
{volume_down} {volume_mute} {volume_up}

KEYWORDS5_au3= #include #include-once

KEYWORDS6_au3= #region #endregion
[Keywords for awk files]
KEYWORDS_awk=BEGIN END \
if else while do for in break continue delete exit function return \
print printf sprintf \
system close getline next nextfile fflush \
atan2 cos exp int log rand sin sqrt srand \
asort asorti gensub sub gsub index length match split \
strtonum substr tolower toupper \
mktime strftime systime \
and compl lshift or rshift xor \
bindtextdomain dcgettext dcngettext \
ARGC ARGIND ARGV BINMODE CONVFMT ENVIRON ERRNO FIELDWIDTHS \
FILENAME FNR FS IGNORECASE LINT NF NR OFMT OFS ORS PROCINFO \
RS RT RSTART RLENGTH SUBSEP TEXTDOMAIN
[Keywords for bash files]
KEYWORDS_bash=alias \
ar asa awk banner basename bash bc bdiff break \
bunzip2 bzip2 cal calendar case cat cc cd chmod cksum \
clear cmp col comm compress continue cp cpio crypt \
csplit ctags cut date dc dd declare deroff dev df diff diff3 \
dircmp dirname do done du echo ed egrep elif else env \
esac eval ex exec exit expand export expr false fc \
fgrep fi file find fmt fold for function functions \
getconf getopt getopts grep gres hash head help \
history iconv id if in integer jobs join kill local lc \
let line ln logname look ls m4 mail mailx make \
man mkdir more mt mv newgrp nl nm nohup ntps od \
pack paste patch pathchk pax pcat perl pg pr print \
printf ps pwd read readonly red return rev rm rmdir \
sed select set sh shift size sleep sort spell \
split start stop strings strip stty sum suspend \
sync tail tar tee test then time times touch tr \
trap true tsort tty type typeset ulimit umask unalias \
uname uncompress unexpand uniq unpack unset until \
uudecode uuencode vi vim vpax wait wc whence which \
while who wpaste wstart xargs zcat\
chgrp chown chroot dir dircolors \
factor groups hostid install link md5sum mkfifo \
mknod nice pinky printenv ptx readlink seq \
sha1sum shred stat su tac unlink users vdir whoami yes
[Keywords for batch files]
KEYWORDS_batch=rem set if exist errorlevel for in do \
break call chcp cd chdir choice cls country ctty date del erase dir echo \
exit goto loadfix loadhigh mkdir md move path pause prompt rename ren \
rmdir rd shift time type ver verify vol \
com con lpt nul \
color copy defined else elseiff not start quit gosub \
switch endswitch case default return iff endiff then enddo except quit\
setlocal while pushd popd list cdd 

KEYWORDS2_batch=append attrib chkdsk comp diskcomp

[Keywords for blitzbasic files]
# keywords must be all lowercase
KEYWORDS_blitzbasic=abs accepttcpstream acos after and apptitle asc asin atan atan2 \
automidhandle autosuspend availvidmem backbuffer banksize before bin calldll \
case ceil changedir channelpan channelpitch channelplaying channelvolume chr \
closedir closefile closemovie closetcpserver closetcpstream closeudpstream cls \
clscolor color colorblue colorgreen colorred commandline const copybank copyfile \
copyimage copypixel copypixelfast copyrect copystream cos countgfxdrivers \
countgfxmodes counthostips createbank createdir createimage createnetplayer \
createprocess createtcpserver createtimer createudpstream currentdate currentdir \
currenttime data debuglog default delay delete deletedir deletefile \
deletenetplayer desktopbuffer dim dottedip drawblock drawblockrect drawimage \
drawimagerect drawmovie each else else if elseif end end function end if end \
select end type endgraphics endif eof execfile exit exp false field filepos \
filesize filetype first flip float floor flushjoy flushkeys flushmouse \
fontheight fontname fontsize fontstyle fontwidth for forever freebank freefont \
freeimage freesound freetimer frontbuffer function gammablue gammagreen gammared \
getcolor getenv getkey getmouse gfxdrivername gfxmodedepth gfxmodeexists \
gfxmodeformat gfxmodeheight gfxmodewidth global gosub goto grabimage graphics \
graphicsbuffer graphicsdepth graphicsformat graphicsheight graphicswidth \
handleimage hex hidepointer hostip hostnetgame if imagebuffer imageheight \
imagerectcollide imagerectoverlap imagescollide imagesoverlap imagewidth \
imagexhandle imageyhandle include input insert instr int joinnetgame joydown \
joyhat joyhit joypitch joyroll joytype joyu joyudir joyv joyvdir joyx joyxdir \
joyy joyyaw joyydir joyz joyzdir keydown keyhit keywait last left len line \
loadanimimage loadbuffer loadfont loadimage loadsound local lockbuffer \
lockedformat lockedpitch lockedpixels log log10 loopsound lower lset maskimage \
mid midhandle millisecs mod morefiles mousedown mousehit mousex mousexspeed \
mousey mouseyspeed mousez mousezspeed movemouse movieheight movieplaying \
moviewidth netmsgdata netmsgfrom netmsgto netmsgtype netplayerlocal \
netplayername new next nextfile not null openfile openmovie opentcpstream or \
origin oval pausechannel pausetimer peekbyte peekfloat peekint peekshort pi \
playcdtrack playmusic playsound plot pokebyte pokefloat pokeint pokeshort print \
queryobject rand read readavail readbyte readbytes readdir readfile readfloat \
readint readline readpixel readpixelfast readshort readstring rect rectsoverlap \
recvnetmsg recvudpmsg repeat replace resettimer resizebank resizeimage restore \
resumechannel resumetimer return right rnd rndseed rotateimage rset runtimeerror \
sar savebuffer saveimage scaleimage scanline seedrnd seekfile select sendnetmsg \
sendudpmsg setbuffer setenv setfont setgamma setgfxdriver sgn shl showpointer \
shr sin soundpan soundpitch soundvolume sqr startnetgame step stop stopchannel \
stopnetgame str string stringheight stringwidth systemproperty tan tcpstreamip \
tcpstreamport tcptimeouts text tformfilter tformimage then tileblock tileimage \
timerticks to totalvidmem trim true type udpmsgip udpmsgport udpstreamip \
udpstreamport udptimeouts unlockbuffer until updategamma upper viewport vwait \
waitkey waitmouse waittimer wend while write writebyte writebytes writefile \
writefloat writeint writeline writepixel writepixelfast writeshort writestring \
xor


[Keywords for ch files]
KEYWORDS_ch=auto array bool break case char class complex ComplexInf ComplexNaN \
const continue default delete \
do double else enum export extern float for foreach goto if Inf inline int \
long namespace NaN new NULL private public register restrict return short \
signed sizeof static string_t struct switch this typedef union unsigned \
using void volatile wchar_t while __declspec
[Keywords for cpp files]
KEYWORDS_cpp=and and_eq asm auto bitand bitor bool break \
case catch char class compl const const_cast continue \
default delete do double dynamic_cast else enum explicit export extern false float for \
friend goto if inline int long mutable namespace new not not_eq \
operator or or_eq private protected public \
register reinterpret_cast return short signed sizeof static static_cast struct switch \
template this throw true try typedef typeid typename union unsigned using \
virtual void volatile wchar_t while xor xor_eq

KEYWORDS2_cpp=

KEYWORDS3_cpp=a addindex addtogroup anchor arg attention \
author b brief bug c class code date def defgroup deprecated dontinclude \
e em endcode endhtmlonly endif endlatexonly endlink endverbatim enum example exception \
f$ f[ f] file fn hideinitializer htmlinclude htmlonly \
if image include ingroup internal invariant interface latexonly li line link \
mainpage name namespace nosubgrouping note overload \
p page par param param[in] param[out] \
post pre ref relates remarks return retval \
sa section see showinitializer since skip skipline struct subsection \
test throw todo typedef union until \
var verbatim verbinclude version warning weakgroup $ @ \ & < > # { }
[Keywords for cs files]
KEYWORDS_cs=abstract as base bool break byte case catch char checked class \
const continue decimal default delegate do double else enum \
event explicit extern false finally fixed float for foreach goto if \
implicit in int interface internal is lock long namespace new null \
object operator out override params private protected public \
readonly ref return sbyte sealed short sizeof stackalloc static \
string struct switch this throw true try typeof uint ulong \
unchecked unsafe ushort using virtual void while
[Keywords for css files]
KEYWORDS_css=\
color background-color background-image background-repeat background-attachment background-position background \
font-family font-style font-variant font-weight font-size font \
word-spacing letter-spacing text-decoration vertical-align text-transform text-align text-indent line-height \
margin-top margin-right margin-bottom margin-left margin \
padding-top padding-right padding-bottom padding-left padding \
border-top-width border-right-width border-bottom-width border-left-width border-width \
border-top border-right border-bottom border-left border \
border-color border-style width height float clear \
display white-space list-style-type list-style-image list-style-position list-style\
border-top-color border-right-color border-bottom-color border-left-color border-color \
border-top-style border-right-style border-bottom-style border-left-style border-style \
top right bottom left position z-index direction unicode-bidi \
min-width max-width min-height max-height overflow clip visibility content quotes \
counter-reset counter-increment marker-offset \
size marks page-break-before page-break-after page-break-inside page orphans widows \
font-stretch font-size-adjust unicode-range units-per-em src \
panose-1 stemv stemh slope cap-height x-height ascent descent widths bbox definition-src \
baseline centerline mathline topline text-shadow \
caption-side table-layout border-collapse border-spacing empty-cells speak-header \
cursor outline outline-width outline-style outline-color \
volume speak pause-before pause-after pause cue-before cue-after cue \
play-during azimuth elevation speech-rate voice-family pitch pitch-range stress richness \
speak-punctuation speak-numeral


KEYWORDS2_css=first-letter first-line link active visited \
first-child focus hover lang before after left right first

KEYWORDS3_css=\
auto none normal italic oblique small-caps bold bolder lighter \
xx-small x-small small medium large x-large xx-large larger smaller \
transparent repeat repeat-x repeat-y no-repeat scroll fixed \
top bottom left center right justify both \
underline overline line-through blink \
baseline sub super text-top middle text-bottom \
capitalize uppercase lowercase thin medium thick \
dotted dashed solid double groove ridge inset outset \
block inline list-item pre no-wrap inside outside \
disc circle square decimal lower-roman upper-roman lower-alpha upper-alpha \
aqua black blue fuchsia gray green lime maroon navy olive purple red silver teal white yellow\
inherit \
run-in compact marker table inline-table table-row-group table-header-group table-footer-group \
table-row table-column-group table-column table-cell table-caption \
static relative absolute fixed ltr rtl embed bidi-override \
visible hidden scroll collapse open-quote close-quote no-open-quote no-close-quote \
decimal-leading-zero lower-greek lower-latin upper-latin hebrew armenian georgian \
cjk-ideographic hiragana katakana hiragana-iroha katakana-iroha \
landscape portrait crop cross always avoid \
wider narrower ultra-condensed extra-condensed condensed semi-condensed \
semi-expanded expanded extra-expanded ultra-expanded \
caption icon menu message-box small-caption status-bar \
separate show hide once crosshair default pointer move text wait help \
e-resize ne-resize nw-resize n-resize se-resize sw-resize s-resize w-resize \
ActiveBorder ActiveCaption AppWorkspace Background ButtonFace ButtonHighlight ButtonShadow \
InactiveCaptionText ButtonText CaptionText GrayText Highlight HighlightText InactiveBorder \
InactiveCaption InfoBackground InfoText Menu MenuText Scrollbar ThreeDDarkShadow \
ThreeDFace ThreeDHighlight ThreeDLightShadow ThreeDShadow Window WindowFrame WindowText \
silent x-soft soft medium loud x-loud spell-out mix \
left-side far-left center-left center-right far-right right-side behind leftwards rightwards \
below level above higher lower x-slow slow medium fast x-fast faster slower \
male female child x-low low high x-high code digits continous

[Keywords for d files]
KEYWORDS_d=abstract alias align asm assert auto \
 body bool break byte \
 case cast catch cdouble cent cfloat char class const continue creal \
 dchar debug default delegate delete deprecated do double \
 else enum export extern \
 false final finally float for foreach foreach_reverse function \
 goto \
 idouble if ifloat import in inout int interface invariant ireal is \
 lazy long \
 mixin module \
 new null \
 out override \
 package pragma private protected public \
 real return \
 scope short static struct super switch synchronized \
 template this throw true try typedef typeid typeof \
 ubyte ucent uint ulong union unittest ushort \
 version void volatile \
 wchar while with

KEYWORDS3_d=a addindex addtogroup anchor arg attention \
author b brief bug c class code date def defgroup deprecated dontinclude \
e em endcode endhtmlonly endif endlatexonly endlink endverbatim enum example exception \
f$ f[ f] file fn hideinitializer htmlinclude htmlonly \
if image include ingroup internal invariant interface latexonly li line link \
mainpage name namespace nosubgrouping note overload \
p page par param post pre ref relates remarks return retval \
sa section see showinitializer since skip skipline struct subsection \
test throw todo typedef union until \
var verbatim verbinclude version warning weakgroup $ @ \ & < > # { }

[Keywords for escript files]
KEYWORDS_escript=\
basic basicio boats \
cfgfile \
file \
http \
npc \
os \
uo util \
accessible \
addmenuitem \
appendconfigfileelem \
applyconstraint \
applydamage \
applyrawdamage \
assignrecttoweatherregion \
append \
baseskilltorawskill \
boatfromitem \
broadcast \
ban \
cdbl \
cint \
cstr \
checklineofsight \
checklosat \
checkskill \
consumemana \
consumereagents \
consumesubstance \
createaccount \
createitematlocation \
createiteminbackpack \
createitemininventory \
createitemincontainer \
createmenu \
createmultiatlocation \
createnpcfromtemplate \
createrootiteminstoragearea \
createstoragearea \
clear_script_profile_counters \
close \
damage \
destroyitem \
destroymulti \
destroyrootiteminstoragearea \
detach \
disableevents \
disconnectclient \
distance \
disable \
enableevents \
enumerateitemsincontainer \
enumerateonlinecharacters \
equipfromtemplate \
equipitem \
eraseglobalproperty \
eraseobjproperty \
enable \
enabled \
erase \
events_waiting \
exists \
findconfigelem \
findobjtypeincontainer \
findrootiteminstoragearea \
findstoragearea \
fclose \
find \
fopen \
fread \
fseek \
ftell \
fwrite \
gamestat \
getamount \
getcommandhelp \
getconfigint \
getconfigintkeys \
getconfigmaxintkey \
getconfigreal \
getconfigstring \
getconfigstringkeys \
getconfigstringarray \
getelemproperty \
getequipmentbylayer \
getglobalproperty \
getharvestdifficulty \
getmapinfo \
getmenuobjtypes \
getobjproperty \
getobjtype \
getobjtypebyname \
getproperty \
getrawskill \
getregionstring \
getskill \
getspelldifficulty \
getstandingheight \
getworldheight \
grantprivilege \
harvestresource \
healdamage \
hex \
islegalmove \
insert \
keys \
listequippeditems \
listghostsnearlocation \
listhostiles \
listitemsatlocation \
listitemsnearlocation \
listitemsnearlocationoftype \
listmobilesinlineofsight \
listmobilesnearlocation \
listmobilesnearlocationex \
listobjectsinbox \
loadtusscpfile \
left \
len \
log_profile \
lower \
makeboundingbox \
move \
moveboat \
moveboatrelative \
movecharactertolocation \
moveitemtocontainer \
moveitemtolocation \
move_offline_mobiles \
openpaperdoll \
open \
pack \
performaction \
playlightningbolteffect \
playmovingeffect \
playmovingeffectxyz \
playobjectcenteredeffect \
playsoundeffect \
playsoundeffectprivate \
playstationaryeffect \
printtextabove \
printtextaboveprivate \
packages \
polcore \
position \
print \
queryparam \
randomdiceroll \
randomint \
rawskilltobaseskill \
readconfigfile \
readgameclock \
releaseitem \
registerforspeechevents \
registeritemwithboat \
requestinput \
reserveitem \
restartscript \
resurrect \
revokeprivilege \
runawayfrom \
runawayfromlocation \
runtoward \
runtowardlocation \
reverse \
run_script_to_completion \
saveworldstate \
selectmenuitem2 \
self \
sendbuywindow \
senddialoggump \
sendevent \
sendopenspecialcontainer \
sendpacket \
sendsellwindow \
sendskillwindow \
sendstringastipwindow \
sendsysmessage \
sendtextentrygump \
setanchor \
setglobalproperty \
setname \
setobjproperty \
setopponent \
setproperty \
setrawskill \
setregionlightlevel \
setregionweatherlevel \
setscriptcontroller \
setwarmode \
shutdown \
speakpowerwords \
splitwords \
startspelleffect \
subtractamount \
systemfindboatbyserial \
systemfindobjectbyserial \
say \
set_critical \
set_debug \
set_priority \
set_priority_divide \
set_script_option \
setcmdlevel \
setdex \
setint \
setlightlevel \
setmaster \
setname \
setpassword \
setstr \
shrink \
size \
sleep \
sleepms \
sort \
spendgold \
squelch \
start_script \
syslog \
system_rpm \
target \
targetcoordinates \
targetmultiplacement \
turnawayfrom \
turnawayfromlocation \
turnboat \
turntoward \
turntowardlocation \
toggle \
unloadconfigfile \
unpack \
unban \
unload_scripts \
upper \
walkawayfrom \
walkawayfromlocation \
walktoward \
walktowardlocation \
wander \
writehtml \
writehtmlraw \
wait_for_event \
movechar_forcelocation \
moveitem_forcelocation \
moveitem_normal \
scriptopt_debug \
scriptopt_no_interrupt \
scriptopt_no_runaway \
te_cancel_disable \
te_cancel_enable \
te_style_disable \
te_style_normal \
te_style_numerical \
tgtopt_check_los \
tgtopt_harmful \
tgtopt_helpful \
tgtopt_neutral \
tgtopt_nocheck_los \
setprop \
getprop


KEYWORDS2_escript=\
array \
const \
dictionary \
global \
local \
var \
and \
default \
in \
next not \
or \
return \
to \
include \
use \
enum


KEYWORDS3_escript=\
while \
for \
endfor \
function \
program \
endprogram endfunction \
foreach \
case \
else elseif \
if endcase endenum endforeach endif endwhile




[Keywords for eiffel files]
KEYWORDS_eiffel=alias all and any as bit boolean \
check class character clone create creation current \
debug deferred div do double \
else elseif end ensure equal expanded export external \
false feature forget from frozen general \
if implies indexing infix inherit inspect integer invariant is \
language like local loop mod name nochange none not \
obsolete old once or platform pointer prefix precursor \
real redefine rename require rescue result retry \
select separate string strip then true undefine unique until \
variant void when xor
[Keywords for erlang files]
KEYWORDS_erlang=after begin case catch cond end fun if let of query receive when \
define record export import include include_lib ifdef ifndef else endif undef \
apply attribute call do in letrec module primop try
[Keywords for flagship files]
KEYWORDS_flagship=\
? @ accept access all alternate announce ansi any append as assign autolock average \
begin bell bitmap blank box \
call cancel case century charset checkbox clear close cls color combobox commit \
confirm console constant continue copy count create cursor \
date dbread dbwrite decimals declare default delete deleted delimiters device dir \
directory display do draw \
edit else elseif eject end endcase enddo endif endtext epoch erase error escape eval eventmask \
exact exclusive extended external extra \
field file filter find fixed font for form format from \
get gets global global_extern go goto gotop guialign guicolor guicursor guitransl \
html htmltext \
if image index input intensity \
join \
key keyboard keytransl \
label lines list listbox local locate \
margin memory memvar menu message method multibyte multilocks \
next nfs nfslock nfs_force note \
on openerror order outmode \
pack parameters path pixel pop printer private prompt public push pushbutton \
quit \
radiobutton radiogroup read recall refresh reindex relation release rename replace report request restore \
richtext rowadapt rowalign run \
save say scoreboard scrcompress screen seek select sequence set setenhanced setstandard setunselected \
skip softseek sort source static store struct structure sum \
tag tbrowse text to total type typeahead \
unique unlock update use \
wait while with wrap \
xml zap zerobyteout

KEYWORDS2_flagship=\
_displarr _displarrerr _displarrstd _displobj _displobjerr _displobjstd \
aadd abs achoice aclone acopy adel adir aelemtype aeval afields afill ains alert alias alltrim altd ansi2oem \
appiomode appmdimode appobject array asc ascan asize asort at atail atanychar autoxlock \
between bin2i bin2l bin2w binand binlshift binor binrshift binxor bof break browse \
cdow chr chr2screen cmonth col col2pixel color2rgb colorselect colvisible consoleopen consolesize crc32 ctod curdir \
date datevalid day dbappend dbclearfilter dbclearindex dbclearrelation dbcloseall dbclosearea dbcommit dbcommitall \
dbcreate dbcreateindex dbdelete dbedit dbeval dbf dbfilter dbfinfo dbflock dbfused dbgetlocate dbgobottom dbgoto \
dbgotop dbobject dbrecall dbreindex dbrelation dbrlock dbrlocklist dbrselect dbrunlock dbseek dbselectarea \
dbsetdriver dbsetfilter dbsetindex dbsetlocate dbsetorder dbsetrelation dbskip dbstruct dbunlock dbunlockall \
dbusearea default deleted descend devout devoutpict devpos directory diskspace dispbegin dispbox dispcount \
dispend dispout doserror doserror2str dow drawline dtoc dtos \
empty eof errorblock errorlevel eval execname execpidnum exp \
fattrib fclose fcount fcreate ferase ferror ferror2str fieldblock fielddeci fieldget fieldgetarr fieldlen fieldname \
fieldpos fieldput fieldputarr fieldtype fieldwblock file findexefile fklabel fkmax flagship_dir flock flockf fopen \
found fread freadstdin freadstr freadtxt frename fs_set fseek fwrite \
getactive getalign getapplykey getdosetkey getenv getenvarr getfunction getpostvalid getprevalid getreader guidrawline \
hardcr header hex2num \
i2bin iif indexcheck indexcount indexdbf indexext indexkey indexnames indexord infobox inkey inkey2read inkey2str inkeytrap \
instdchar instdstring int int2num isalpha isbegseq iscolor isdbexcl isdbflock isdbmultip isdbmultiple isdbmultipleopen \
isdbrlock isdigit isfunction isguimode islower isobjclass isobjequiv isobjproperty isprinter isupper \
l2bin lastkey lastrec left len listbox lock log lower ltrim lupdate \
macroeval macrosubst max max_col max_row maxcol maxrow mcol mdblck mdiclose mdiopen mdiselect memocode memodecode \
memoedit memoencode memoline memoread memory memotran memowrit memvarblock mhide min minmax mlcount mlctopos mleftdown \
mlpos mod month mpostolc mpresent mreststate mrightdown mrow msavestate msetcursor msetpos mshow mstate \
neterr netname nextkey num2hex num2int \
objclone oem2ansi onkey ordbagext ordbagname ordcond ordcondset ordcreate orddescend orddestroy ordfor ordisinique \
ordkey ordkeyadd ordkeycount ordkeydel ordkeygoto ordkeyno ordkeyval ordlistadd ordlistclear ordlistrebui ordname \
ordnumber ordscope ordsetfocu ordsetrelat ordskipunique os outerr outstd \
padc padl padr param parameters pcalls pcol pcount pixel2col pixel2row printstatus procfile procline procname procstack proper prow \
qout qout2 qqout qqout2 \
rat rddlist rddname rddsetdefault readexit readinsert readkey readkill readmodal readsave readupdated readvar reccount recno recsize \
replicate restscreen right rlock rlockverify round row row2pixel rowadapt rowvisible rtrim \
savescreen scrdos2unix screen2chr scroll scrunix2dos seconds secondscpu select serial set setansi setblink setcancel setcol2get \
setcolor setcolorba setcursor setevent setguicursor setkey setmode setpos setprc setvarempty sleep sleepms soundex space \
sqrt statbarmsg statusmessage stod str strlen strlen2col strlen2pix strlen2space strpeek strpoke strtran strzero stuff substr \
tbcolumnnew tbmouse tbrowsearr tbrowsedb tbrowsenew tempfilename time tone transform trim truepath type \
updated upper used usersactive usersdbf usersmax \
val valtype version \
webdate weberrorhandler webgetenvir webgetformdata webhtmlbegin webhtmlend weblogerr webmaildomain weboutdata websendmail word \
year

KEYWORDS3_flagship=function procedure return exit

KEYWORDS4_flagship=class instance export hidden protect prototype
[Keywords for flash files]
KEYWORDS_flash=add and break case catch class continue default delete do \
dynamic else eq extends false finally for function ge get gt if implements import in \
instanceof interface intrinsic le lt ne new not null or private public return \
set static super switch this throw true try typeof undefined var void while with

KEYWORDS2_flash=Array Arguments Accessibility Boolean Button Camera Color \
ContextMenu ContextMenuItem Date Error Function Key LoadVars LocalConnection Math \
Microphone Mouse MovieClip MovieClipLoader NetConnection NetStream Number Object \
PrintJob Selection SharedObject Sound Stage String StyleSheet System TextField \
TextFormat TextSnapshot Video Void XML XMLNode XMLSocket \
_accProps _focusrect _global _highquality _parent _quality _root _soundbuftime \
arguments asfunction call capabilities chr clearInterval duplicateMovieClip \
escape eval fscommand getProperty getTimer getURL getVersion gotoAndPlay gotoAndStop \
ifFrameLoaded Infinity -Infinity int isFinite isNaN length loadMovie loadMovieNum \
loadVariables loadVariablesNum maxscroll mbchr mblength mbord mbsubstring MMExecute \
NaN newline nextFrame nextScene on onClipEvent onUpdate ord parseFloat parseInt play \
prevFrame prevScene print printAsBitmap printAsBitmapNum printNum random removeMovieClip \
scroll set setInterval setProperty startDrag stop stopAllSounds stopDrag substring \
targetPath tellTarget toggleHighQuality trace unescape unloadMovie unLoadMovieNum updateAfterEvent
[Keywords for forth files]
KEYWORDS_forth=AGAIN BEGIN CASE DO ELSE ENDCASE ENDOF IF LOOP OF REPEAT THEN UNTIL  WHILE [IF] [ELSE] [THEN] ?DO

KEYWORDS2_forth=DUP DROP ROT SWAP OVER @ ! 2@ 2! 2DUP 2DROP 2SWAP 2OVER NIP R@ >R R> 2R@ 2>R 2R> \
0= 0< SP@ SP! W@ W! C@ C! < > = <> 0<>\
SPACE SPACES KEY? KEY THROW CATCH ABORT */ 2* /MOD CELL+ CELLS CHAR+ \
CHARS MOVE ERASE DABS TITLE HEX DECIMAL HOLD <# # #S #> SIGN \
D. . U. DUMP (.") >NUMBER ' IMMEDIATE EXIT RECURSE UNLOOP LEAVE HERE ALLOT , \
C, W, COMPILE, BRANCH, RET, LIT, DLIT, ?BRANCH, ", >MARK >RESOLVE1 <MARK >RESOLVE \
ALIGN ALIGNED USER-ALLOT USER-HERE HEADER DOES> SMUDGE HIDE :NONAME LAST-WORD \
?ERROR ERROR2 FIND1 SFIND SET-CURRENT GET-CURRENT DEFINITIONS GET-ORDER FORTH \
ONLY SET-ORDER ALSO PREVIOUS VOC-NAME. ORDER LATEST LITERAL 2LITERAL SLITERAL \
CLITERAL ?LITERAL1 ?SLITERAL1 HEX-LITERAL HEX-SLITERAL ?LITERAL2 ?SLITERAL2 SOURCE \
EndOfChunk CharAddr PeekChar IsDelimiter GetChar OnDelimiter SkipDelimiters OnNotDelimiter \
SkipWord SkipUpTo ParseWord NextWord PARSE SKIP CONSOLE-HANDLES REFILL DEPTH ?STACK \
?COMP WORD INTERPRET BYE QUIT MAIN1 EVALUATE INCLUDE-FILE INCLUDED >BODY +WORD \
WORDLIST CLASS! CLASS@ PAR! PAR@ ID. ?IMMEDIATE ?VOC IMMEDIATE VOC WordByAddrWl \
WordByAddr NLIST WORDS SAVE OPTIONS /notransl ANSI>OEM ACCEPT EMIT CR TYPE EKEY? \
EKEY EKEY>CHAR EXTERNTASK ERASE-IMPORTS ModuleName ModuleDirName ENVIRONMENT? \
DROP-EXC-HANDLER SET-EXC-HANDLER HALT ERR CLOSE-FILE CREATE-FILE CREATE-FILE-SHARED \
OPEN-FILE-SHARED DELETE-FILE FILE-POSITION FILE-SIZE OPEN-FILE READ-FILE REPOSITION-FILE \
DOS-LINES UNIX-LINES READ-LINE WRITE-FILE RESIZE-FILE WRITE-LINE ALLOCATE FREE RESIZE \
START SUSPEND RESUME STOP PAUSE MIN MAX TRUE FALSE ASCIIZ> \
R/O W/O ;CLASS ENDWITH OR AND /STRING SEARCH COMPARE EXPORT ;MODULE SPACE

KEYWORDS3_forth=\
VARIABLE CREATE : VALUE CONSTANT VM: M: var dvar chars OBJ \
CONSTR: DESTR: CLASS: OBJECT: POINTER \
USER USER-CREATE USER-VALUE VECT \
WNDPROC: VOCABULARY -- TASK: CEZ: MODULE:

KEYWORDS4_forth=\
CHAR [CHAR] POSTPONE WITH ['] TO [COMPILE] CHAR ASCII \'

KEYWORDS5_forth=\
REQUIRE WINAPI:

KEYWORDS6_forth=\
S" ABORT" Z" " ." C"
[Keywords for fortran files]
KEYWORDS_fortran=access action advance allocatable allocate \
apostrophe assign assignment associate asynchronous backspace \
bind blank blockdata call case character class close common \
complex contains continue cycle data deallocate decimal delim \
default dimension direct do dowhile double doubleprecision else \
elseif elsewhere encoding end endassociate endblockdata enddo \
endfile endforall endfunction endif endinterface endmodule endprogram \
endselect endsubroutine endtype endwhere entry eor equivalence \
err errmsg exist exit external file flush fmt forall form format \
formatted function go goto id if implicit in include inout \
integer inquire intent interface intrinsic iomsg iolength \
iostat kind len logical module name named namelist nextrec nml \
none nullify number only open opened operator optional out pad \
parameter pass pause pending pointer pos position precision \
print private program protected public quote read readwrite \
real rec recl recursive result return rewind save select \
selectcase selecttype sequential sign size stat status stop stream \
subroutine target then to type unformatted unit use value \
volatile wait where while write

KEYWORDS2_fortran=abs achar acos acosd adjustl adjustr \
aimag aimax0 aimin0 aint ajmax0 ajmin0 akmax0 akmin0 all allocated alog \
alog10 amax0 amax1 amin0 amin1 amod anint any asin asind associated \
atan atan2 atan2d atand bitest bitl bitlr bitrl bjtest bit_size bktest break \
btest cabs ccos cdabs cdcos cdexp cdlog cdsin cdsqrt ceiling cexp char \
clog cmplx conjg cos cosd cosh count cpu_time cshift csin csqrt dabs \
dacos dacosd dasin dasind datan datan2 datan2d datand date \
date_and_time dble dcmplx dconjg dcos dcosd dcosh dcotan ddim dexp \
dfloat dflotk dfloti dflotj digits dim dimag dint dlog dlog10 dmax1 dmin1 \
dmod dnint dot_product dprod dreal dsign dsin dsind dsinh dsqrt dtan dtand \
dtanh eoshift epsilon errsns exp exponent float floati floatj floatk floor fraction \
free huge iabs iachar iand ibclr ibits ibset ichar idate idim idint idnint ieor ifix \
iiabs iiand iibclr iibits iibset iidim iidint iidnnt iieor iifix iint iior iiqint iiqnnt iishft \
iishftc iisign ilen imax0 imax1 imin0 imin1 imod index inint inot int int1 int2 int4 \
int8 iqint iqnint ior ishft ishftc isign isnan izext jiand jibclr jibits jibset jidim jidint \
jidnnt jieor jifix jint jior jiqint jiqnnt jishft jishftc jisign jmax0 jmax1 jmin0 jmin1 \
jmod jnint jnot jzext kiabs kiand kibclr kibits kibset kidim kidint kidnnt kieor kifix \
kind kint kior kishft kishftc kisign kmax0 kmax1 kmin0 kmin1 kmod knint knot kzext \
lbound leadz len len_trim lenlge lge lgt lle llt log log10 logical lshift malloc matmul \
max max0 max1 maxexponent maxloc maxval merge min min0 min1 minexponent minloc \
minval mod modulo mvbits nearest nint not nworkers number_of_processors pack popcnt \
poppar precision present product radix random random_number random_seed range real \
repeat reshape rrspacing rshift scale scan secnds selected_int_kind \
selected_real_kind set_exponent shape sign sin sind sinh size sizeof sngl snglq spacing \
spread sqrt sum system_clock tan tand tanh tiny transfer transpose trim ubound unpack verify

KEYWORDS3_fortran=cdabs cdcos cdexp cdlog cdsin cdsqrt cotan cotand \
dcmplx dconjg dcotan dcotand decode dimag dll_export dll_import doublecomplex dreal \
dvchk encode find flen flush getarg getcharqq getcl getdat getenv gettim hfix ibchng \
identifier imag int1 int2 int4 intc intrup invalop iostat_msg isha ishc ishl jfix \
lacfar locking locnear map nargs nbreak ndperr ndpexc offset ovefl peekcharqq precfill \
prompt qabs qacos qacosd qasin qasind qatan qatand qatan2 qcmplx qconjg qcos qcosd \
qcosh qdim qexp qext qextd qfloat qimag qlog qlog10 qmax1 qmin1 qmod qreal qsign qsin \
qsind qsinh qsqrt qtan qtand qtanh ran rand randu rewrite segment setdat settim system \
timer undfl unlock union val virtual volatile zabs zcos zexp zlog zsin zsqrt
[Keywords for freebasic files]
KEYWORDS_freebasic=\
append as asc asin asm atan2 atn beep bin binary bit bitreset bitset bload \
bsave byref byte byval call callocate case cbyte cdbl cdecl chain chdir chr \
cint circle clear clng clngint close cls color command common cons const \
continue cos cshort csign csng csrlin cubyte cuint culngint cunsg curdir \
cushort custom cvd cvi cvl cvlongint cvs cvshort data date deallocate declare \
defbyte defdbl defined defint deflng deflngint defshort defsng defstr defubyte \
defuint defulngint defushort dim dir do double draw dylibload dylibsymbol else \
elseif end enum environ environ$ eof eqv erase err error exec exepath exit exp \
export extern field fix flip for fre freefile function get getjoystick getkey \
getmouse gosub goto hex hibyte hiword if iif imagecreate imagedestroy imp \
inkey inp input instr int integer is kill lbound lcase left len let lib line \
lobyte loc local locate lock lof log long longint loop loword lset ltrim \
mid mkd mkdir mki mkl mklongint mks mkshort mod multikey mutexcreate \
mutexdestroy mutexlock mutexunlock name next not oct on once open option or out \
output overload paint palette pascal pcopy peek peeki peeks pipe pmap point \
pointer poke pokei pokes pos preserve preset print private procptr pset ptr \
public put random randomize read reallocate redim rem reset restore resume \
resume next return rgb rgba right rmdir rnd rset rtrim run sadd screen \
screencopy screeninfo screenlock screenptr screenres screenset screensync \
screenunlock seek statement seek function selectcase setdate setenviron \
setmouse settime sgn shared shell shl short shr sin single sizeof sleep space \
spc sqr static stdcall step stop str string string strptr sub swap system tab \
tan then threadcreate threadwait time time timer to trans trim type ubound \
ubyte ucase uinteger ulongint union unlock unsigned until ushort using va_arg \
va_first va_next val val64 valint varptr view viewprint wait wend while width \
window windowtitle with write xor zstring
KEYWORDS2_basic=#define #dynamic #else #endif #error #if #ifdef #ifndef #inclib #include #print #static #undef


[Keywords for gap files]
KEYWORDS_gap=and break continue do elif else end fi for function \
if in local mod not od or quit rec repeat return then until while QUIT

KEYWORDS2_gap=false true IsBound Unbind TryNextMethod \
Info Assert SaveWorkspace fail
[Keywords for idl files]
KEYWORDS_idl=\
aggregatable allocate appobject arrays async async_uuid \
auto_handle \
bindable boolean broadcast byte byte_count \
call_as callback char coclass code comm_status \
const context_handle context_handle_noserialize \
context_handle_serialize control cpp_quote custom \
decode default defaultbind defaultcollelem \
defaultvalue defaultvtable dispinterface displaybind dllname \
double dual \
enable_allocate encode endpoint entry enum error_status_t \
explicit_handle \
fault_status first_is float \
handle_t heap helpcontext helpfile helpstring \
helpstringcontext helpstringdll hidden hyper \
id idempotent ignore iid_as iid_is immediatebind implicit_handle \
import importlib in include in_line int __int64 __int3264 interface \
last_is lcid length_is library licensed local long \
max_is maybe message methods midl_pragma \
midl_user_allocate midl_user_free min_is module ms_union \
ncacn_at_dsp ncacn_dnet_nsp ncacn_http ncacn_ip_tcp \
ncacn_nb_ipx ncacn_nb_nb ncacn_nb_tcp ncacn_np \
ncacn_spx ncacn_vns_spp ncadg_ip_udp ncadg_ipx ncadg_mq \
ncalrpc nocode nonbrowsable noncreatable nonextensible notify \
object odl oleautomation optimize optional out out_of_line \
pipe pointer_default pragma properties propget propput propputref \
ptr public \
range readonly ref represent_as requestedit restricted retval \
shape short signed size_is small source strict_context_handle \
string struct switch switch_is switch_type \
transmit_as typedef \
uidefault union unique unsigned user_marshal usesgetlasterror uuid \
v1_enum vararg version void wchar_t wire_marshal\
attribute native noscript scriptable shared wstring inout handle
[Keywords for inno files]
KEYWORDS_inno=code components custommessages dirs files icons ini installdelete \
 langoptions languages messages registry run setup types tasks \
 uninstalldelete uninstallrun _istool

KEYWORDS2_inno=allowcancelduringinstall allownoicons allowrootdirectory allowuncpath \
 alwaysrestart alwaysshowcomponentslist alwaysshowdironreadypage \
 alwaysshowgrouponreadypage alwaysusepersonalgroup appcomments appcontact \
 appcopyright appid appmodifypath appmutex appname apppublisher \
 apppublisherurl appreadmefile appsupportphone appsupporturl appupdatesurl \
 appvername appversion appenddefaultdirname appenddefaultgroupname \
 architecturesallowed architecturesinstallin64bitmode backcolor backcolor2 \
 backcolordirection backsolid changesassociations changesenvironment \
 compression compressionthreads copyrightfontname copyrightfontsize \
 createappdir createuninstallregkey defaultdirname defaultgroupname \
 defaultuserinfoname defaultuserinfoorg defaultuserinfoserial dialogfontname \
 dialogfontsize dialogfontstandardheight direxistswarning disabledirpage \
 disablefinishedpage disableprogramgrouppage disablereadymemo \
 disablereadypage disablestartupprompt diskclustersize diskslicesize \
 diskspanning dontmergeduplicatefiles enabledirdoesntexistwarning encryption \
 extradiskspacerequired flatcomponentslist infoafterfile infobeforefile \
 internalcompresslevel languagecodepage languagedetectionmethod languageid \
 languagename licensefile mergeduplicatefiles messagesfile minversion \
 onlybelowversion outputbasefilename outputdir outputmanifestfile password \
 privilegesrequired reservebytes restartifneededbyrun righttoleft \
 setupiconfile setuplogging showcomponentsizes showlanguagedialog \
 showtaskstreelines showundisplayablelanguages signtool signeduninstaller \
 signeduninstallerdir slicesperdisk solidcompression sourcedir \
 terminalservicesaware timestamprounding timestampsinutc titlefontname \
 titlefontsize touchdate touchtime uninstalldisplayicon uninstalldisplayname \
 uninstallfilesdir uninstalliconfile uninstalllogmode \
 uninstallrestartcomputer uninstallstyle uninstallable \
 updateuninstalllogappname usepreviousappdir usepreviousgroup \
 useprevioussetuptype useprevioustasks useprevioususerinfo usesetupldr \
 userinfopage versioninfocompany versioninfocopyright versioninfodescription \
 versioninfoproductname versioninfoproductversion versioninfotextversion \
 versioninfoversion welcomefontname welcomefontsize windowresizable \
 windowshowcaption windowstartmaximized windowvisible wizardimagebackcolor \
 wizardimagefile wizardimagestretch wizardsmallimagebackcolor \
 wizardsmallimagefile wizardstyle

KEYWORDS3_inno=afterinstall attribs beforeinstall check comment components copymode \
 description destdir destname excludes externalsize extradiskspacerequired \
 filename flags fontinstall groupdescription hotkey iconfilename iconindex \
 key languages minversion name onlybelowversion parameters permissions root \
 runonceid section source statusmsg string subkey tasks type types valuedata \
 valuename valuetype verb workingdir

KEYWORDS4_inno=append define dim elif else emit endif endsub error expr file for if ifdef \
 ifexist ifndef ifnexist include insert pragma sub undef

KEYWORDS5_inno=begin break case const continue do downto else end except finally for \
 function if of procedure repeat then to try until uses var while with
[Keywords for java files]
KEYWORDS_java=abstract assert boolean break byte case catch char class const continue default do double else extends final finally float for future generic goto if implements import inner instanceof int interface long native new null outer package private protected public rest return short static super switch synchronized this throw throws transient try var void volatile while
[Keywords for javafx files]
KEYWORDS_javafx=abstract after and as assert at attribute before bind bound break \
catch class continue def delete else exclusive extends false finally first for from function \
if import indexof in init insert instanceof into inverse last lazy mod new not null \
on or override package postinit private protected public-init public public-read \
replace return reverse sizeof static step super then this throw trigger true try tween typeof \
var where while with

KEYWORDS2_javafx=Boolean Duration Function Integer Number Object String Void \
addShutdownAction deferAction exit \
getArgument getArguments getProperty isInitialized isSameObject \
print println removeShutdownAction
[Keywords for js files]
KEYWORDS_js=abstract boolean break byte case catch char class const continue debugger default delete do double else enum export extends final finally float for function goto if implements import in instanceof int interface long native new package private protected public return short static super switch synchronized this throw throws transient try typeof var void volatile while with

[Keywords for kix files]
KEYWORDS_kix=? and beep big break call cd cls color cookie1 copy \
	debug del dim display do until exit flushkb for each next function endfunction \
	get gets global go gosub goto if else endif md or password play quit \
	rd redim return run select case endselect set setl setm settime \
	shell sleep small use while loop

KEYWORDS2.kix=abs addkey addprinterconnection addprogramgroup \
	addprogramitem asc ascan at backupeventlog box cdbl chr cint cleareventlog \
	close comparefiletimes createobject cstr dectohex delkey delprinterconnection \
	delprogramgroup delprogramitem deltree delvalue dir enumgroup enumipinfo enumkey \
	enumlocalgroup enumvalue execute exist existkey expandenvironmentvars fix \
	formatnumber freefilehandle getdiskspace getfileattr getfilesize getfiletime \
	getfileversion getobject iif ingroup instr instrrev int isdeclared join \
	kbhit keyexist lcase left len loadhive loadkey logevent logoff ltrim \
	memorysize messagebox open readline readprofilestring readtype readvalue \
	redirectoutput right rnd round rtrim savekey sendkeys sendmessage setascii \
	setconsole setdefaultprinter setfileattr setfocus setoption setsystemstate \
	settitle setwallpaper showprogramgroup shutdown sidtoname split srnd substr \
	trim ubound ucase unloadhive val vartype vartypename writeline \
	writeprofilestring writevalue

KEYWORDS3_kix=address build color comment cpu crlf csd curdir \
	date day domain dos error fullname homedir homedrive homeshr hostname \
	inwin ipaddress0 ipaddress1 ipaddress2 ipaddress3 kix lanroot ldomain \
	ldrive lm logonmode longhomedir lserver maxpwage mdayno mhz monthno \
	month msecs pid primarygroup priv productsuite producttype pwage ras \
	result rserver scriptdir scriptexe scriptname serror sid site startdir \
	syslang ticks time userid userlang wdayno wksta wuserid ydayno year
[Keywords for lisp files]
KEYWORDS_lisp=not defun + - * / = < > <= >= princ \
eval apply funcall quote identity function complement backquote lambda set setq setf \
defun defmacro gensym make symbol intern symbol name symbol value symbol plist get \
getf putprop remprop hash make array aref car cdr caar cadr cdar cddr caaar caadr cadar \
caddr cdaar cdadr cddar cdddr caaaar caaadr caadar caaddr cadaar cadadr caddar cadddr \
cdaaar cdaadr cdadar cdaddr cddaar cddadr cdddar cddddr cons list append reverse last nth \
nthcdr member assoc subst sublis nsubst  nsublis remove length list length \
mapc mapcar mapl maplist mapcan mapcon rplaca rplacd nconc delete atom symbolp numberp \
boundp null listp consp minusp zerop plusp evenp oddp eq eql equal cond case and or let l if prog \
prog1 prog2 progn go return do dolist dotimes catch throw error cerror break \
continue errset baktrace evalhook truncate float rem min max abs sin cos tan expt exp sqrt \
random logand logior logxor lognot bignums logeqv lognand lognor \
logorc2 logtest logbitp logcount integer length nil
[Keywords for lout files]
KEYWORDS_lout=@OptGall @Filter @FilterIn @FilterOut @FilterErr @FontDef @Family @Face @Name @Metrics @ExtraMetrics @Mapping @Recode @Common @Rump @Meld @Insert @OneOf @Next @Plus @Minus @Wide @High @HShift @VShift @BeginHeaderComponent @EndHeaderComponent @SetHeaderComponent @ClearHeaderComponent @OneCol @OneRow @HScale @VScale @HCover @VCover @Scale @KernShrink @HContract @VContract @HLimited @VLimited @HExpand @VExpand @StartHVSpan @StartHSpan @StartVSpan @HSpan @VSpan @PAdjust @HAdjust @VAdjust @Rotate @Background @IncludeGraphic @SysIncludeGraphic @Graphic @LinkSource @LinkDest @URLLink @PlainGraphic @Verbatim @RawVerbatim @Case @Yield @BackEnd @Char @Font @Space @YUnit @ZUnit @Break @Underline @SetColour @SetColor @SetTexture @Outline @Language @CurrLang @CurrFamily @CurrFace @CurrYUnit @CurrZUnit @LEnv @LClos @LUse @LEO @Open @Use @NotRevealed @Tagged @Database @SysDatabase @Include @SysInclude @IncludeGraphicRepeated @PrependGraphic @SysIncludeGraphicRepeated @SysPrependGraphic @Target @Null @PageLabel @Galley @ForceGalley @LInput @Split @Tag @Key @Optimize @Merge @Enclose @Begin @End @Moment @Second @Minute @Hour @Day @Month @Year @Century @WeekDay @YearDay @DaylightSaving @@A @@B @@C @@D @@E @@V
KEYWORDS2_lout=def langdef force horizontally into extend import export precedence associativity left right body macro named compulsory following preceding foll_or_prec now

KEYWORDS3_lout=&&& && & ^// ^/ ^|| ^| ^& // / || |

[Keywords for lua files]
KEYWORDS_lua= and break do else elseif end false for function if in local nil not or repeat return then true until while

KEYWORDS2_lua=\
_VERSION assert collectgarbage dofile error gcinfo loadfile loadstring \
print rawget rawset require tonumber tostring type unpack\
_ALERT _ERRORMESSAGE _INPUT _PROMPT _OUTPUT \
_STDERR _STDIN _STDOUT call dostring foreach foreachi getn globals newtype \
sort tinsert tremove\
_G getfenv getmetatable ipairs loadlib next pairs pcall \
rawequal setfenv setmetatable xpcall \
string table math coroutine io os debug \
load module select

KEYWORDS3_lua=\
abs acos asin atan atan2 ceil cos deg exp \
floor format frexp gsub ldexp log log10 max min mod rad random randomseed \
sin sqrt strbyte strchar strfind strlen strlower strrep strsub strupper tan\
string.byte string.char string.dump string.find string.len \
string.lower string.rep string.sub string.upper string.format string.gfind string.gsub \
table.concat table.foreach table.foreachi table.getn table.sort table.insert table.remove table.setn \
math.abs math.acos math.asin math.atan math.atan2 math.ceil math.cos math.deg math.exp \
math.floor math.frexp math.ldexp math.log math.log10 math.max math.min math.mod \
math.pi math.pow math.rad math.random math.randomseed math.sin math.sqrt math.tan \
string.gmatch string.match string.reverse table.maxn \
math.cosh math.fmod math.modf math.sinh math.tanh math.huge

KEYWORDS4_lua=\
openfile closefile readfrom writeto appendto \
remove rename flush seek tmpfile tmpname read write \
clock date difftime execute exit getenv setlocale time\
coroutine.create coroutine.resume coroutine.status \
coroutine.wrap coroutine.yield \
io.close io.flush io.input io.lines io.open io.output io.read io.tmpfile io.type io.write \
io.stdin io.stdout io.stderr \
os.clock os.date os.difftime os.execute os.exit os.getenv os.remove os.rename \
os.setlocale os.time os.tmpname \
coroutine.running package.cpath package.loaded package.loadlib package.path \
package.preload package.seeall io.popen
[Keywords for nsis files]
KEYWORDS_nsis=!addincludedir !addplugindir MakeNSIS Portions \
Contributors: Abort AddBrandingImage AddSize AutoCloseWindow BGFont \
BGGradient BrandingText BringToFront Call CallInstDLL Caption ChangeUI \
ClearErrors ComponentText GetDLLVersion GetDLLVersionLocal GetFileTime \
GetFileTimeLocal CopyFiles CRCCheck CreateDirectory CreateFont CreateShortCut \
SetDatablockOptimize DeleteINISec DeleteINIStr DeleteRegKey DeleteRegValue \
Delete DetailPrint DirText DirShow DirVar DirVerify GetInstDirError AllowRootDirInstall \
CheckBitmap EnableWindow EnumRegKey EnumRegValue Exch Exec ExecWait \
ExecShell ExpandEnvStrings FindWindow FindClose FindFirst FindNext File FileBufSize \
FlushINI ReserveFile FileClose FileErrorText FileOpen FileRead FileWrite FileReadByte \
FileWriteByte FileSeek Function FunctionEnd GetDlgItem GetFullPathName \
GetTempFileName HideWindow Icon IfAbort IfErrors IfFileExists IfRebootFlag IfSilent \
InstallDirRegKey InstallColors InstallDir InstProgressFlags InstType IntOp IntCmp \
IntCmpU IntFmt IsWindow Goto LangString LangStringUP LicenseData \
LicenseForceSelection LicenseLangString LicenseText LicenseBkColor \
LoadLanguageFile LogSet LogText MessageBox Nop Name OutFile Page \
PageCallbacks PageEx PageExEnd Pop Push Quit ReadINIStr ReadRegDWORD \
ReadRegStr ReadEnvStr Reboot RegDLL Rename Return RMDir Section SectionEnd \
SectionIn SubSection SectionGroup SubSectionEnd SectionGroupEnd SearchPath \
SectionSetFlags SectionGetFlags SectionSetInstTypes SectionGetInstTypes \
SectionGetText SectionSetText SectionGetSize SectionSetSize GetCurInstType \
SetCurInstType InstTypeSetText InstTypeGetText SendMessage SetAutoClose \
SetCtlColors SetBrandingImage SetCompress SetCompressor SetCompressorDictSize \
SetCompressionLevel SetDateSave SetDetailsView SetDetailsPrint SetErrors \
SetErrorLevel GetErrorLevel SetFileAttributes SetFont SetOutPath SetOverwrite \
SetPluginUnload SetRebootFlag SetShellVarContext SetSilent ShowInstDetails \
ShowUninstDetails ShowWindow SilentInstall SilentUnInstall Sleep StrCmp StrCpy \
StrLen SubCaption UninstallExeName UninstallCaption UninstallIcon UninstPage \
UninstallText UninstallSubCaption UnRegDLL WindowIcon WriteINIStr WriteRegBin \
WriteRegDWORD WriteRegStr WriteRegExpandStr WriteUninstaller XPStyle !packhdr \
!system !execute !AddIncludeDir !include !cd !ifdef !ifndef !endif !define !undef !else !echo !warning \
!error !verbose !macro !macroend !insertmacro !ifmacrodef !ifmacrondef MiscButtonText \
DetailsButtonText UninstallButtonText InstallButtonText SpaceTexts \
CompletedText GetFunctionAddress GetLabelAddress GetCurrentAddress \
!AddPluginDir InitPluginsDir AllowSkipFiles Var VIAddVersionKey VIProductVersion LockWindow

KEYWORDS2_nsis=$0 $1 $2 $3 $4 $5 $6 $7 $8 $9 \
$R0 $R1 $R2 $R3 $R4 $R5 $R6 $R7 $R8 $R9 $\t $\" $\' $\` \
$VARNAME $0, $INSTDIR $OUTDIR $CMDLINE $LANGUAGE $PROGRAMFILES \
$COMMONFILES $DESKTOP $EXEDIR ${NSISDIR} $WINDIR $SYSDIR $TEMP \
$STARTMENU $SMPROGRAMS $SMSTARTUP $QUICKLAUNCH $DOCUMENTS \
$SENDTO $RECENT $FAVORITES $MUSIC $PICTURES $VIDEOS $NETHOOD \
$FONTS $TEMPLATES $APPDATA $PRINTHOOD $INTERNET_CACHE $COOKIES \
$HISTORY $PROFILE $ADMINTOOLS $RESOURCES $RESOURCES_LOCALIZED \
$CDBURN_AREA $HWNDPARENT $PLUGINSDIR $$ $\r $\n

KEYWORDS3_nsis=ARCHIVE FILE_ATTRIBUTE_ARCHIVE FILE_ATTRIBUTE_HIDDEN \
FILE_ATTRIBUTE_NORMAL FILE_ATTRIBUTE_OFFLINE FILE_ATTRIBUTE_READONLY \
FILE_ATTRIBUTE_SYSTEM FILE_ATTRIBUTE_TEMPORARY HIDDEN HKCC HKCR HKCU \
HKDD HKEY_CLASSES_ROOT HKEY_CURRENT_CONFIG HKEY_CURRENT_USER HKEY_DYN_DATA \
HKEY_LOCAL_MACHINE HKEY_PERFORMANCE_DATA HKEY_USERS HKLM HKPD HKU IDABORT \
IDCANCEL IDIGNORE IDNO IDOK IDRETRY IDYES MB_ABORTRETRYIGNORE MB_DEFBUTTON1 \
MB_DEFBUTTON2 MB_DEFBUTTON3 MB_DEFBUTTON4 MB_ICONEXCLAMATION \
MB_ICONINFORMATION MB_ICONQUESTION MB_ICONSTOP MB_OK MB_OKCANCEL \
MB_RETRYCANCEL MB_RIGHT MB_SETFOREGROUND MB_TOPMOST MB_YESNO \
MB_YESNOCANCEL NORMAL OFFLINE READONLY SW_SHOWMAXIMIZED SW_SHOWMINIMIZED \
SW_SHOWNORMAL SYSTEM TEMPORARY auto colored false force hide ifnewer nevershow \
normal off on show silent silentlog smooth true try lzma zlib bzip2 none listonly textonly \
both top left bottom right license components directory instfiles uninstConfirm custom \
all leave current ifdiff lastused LEFT RIGHT CENTER dlg_id ALT CONTROL EXT SHIFT \
open print manual alwaysoff
[Keywords for octave files]
KEYWORDS_octave=\
break \
case \
catch \
continue \
do \
else \
elseif \
end \
end_unwind_protect \
endfor \
endif \
endswitch \
endwhile \
for \
function endfunction \
global \
if \
otherwise \
persistent \
return \
switch \
try \
until \
unwind_protect \
unwind_protect_cleanup \
while
[Keywords for opal files]
KEYWORDS_opal=ALL AND ANDIF ANY AS ASSERT AXM COMPLETELY DATA DEF DERIVE \
DFD DISCRIMINATORS ELSE EX EXTERNAL FI FIX FUN IF IMPLEMENTATION IMPLIES IMPORT \
IN INHERIT INJECTIONS INTERFACE INTERNAL LAW LAZY LEFTASSOC LET MODULE NOT ONLY \
OR ORIF OTHERWISE POST PRE PRED PRIORITY PROPERTIES REALIZES REQUIRE RIGHTASSOC \
SELECTORS SIGNATURE SORT SPC SPEC SPECIFICATION STRUCTURE THE THEN THEORY THM \
TYPE UNIQ WHERE

KEYWORDS2_opal=aEntry agent align anchor ans arg arg1 arg2 array \
arrowWhere bag bitmap bool bstree byte callback canvasEditor capStyle channel \
char childstat codom codomFrom codomTo color colorModel com composeOp config \
configCom cursor dArray data data1 data11 data2 data21 data3 data31 data4 \
data41 dataFrom dataTo defaultPrio denotation device dist distOut dom domFrom \
domTo drawing dyn emitter env event eventInfo file filemode filestat filetype \
first first1 first2 first3 fission fmt font from from1 from2 funct group groupid \
heap iconfig image in inData index inode input int inter interdom interpreter \
iseq items joinStyle justifyHow long manager managerRequest map mapEntry mark \
mid modifier nat natMap OBJECT option orient out outData output packOp pair \
parser permission point positionRequest process procstat quad range real \
regulator rel relief res res1 res2 result role sap script scroller scrollView \
scrollWindow searchOpt second seekMode selector semaphor seq seqEntry set \
setEntry short sigaction sighandler sigmask signal size sizeRequest some \
sreal state stateId stateRequest string subrel tag textEditor time to tree \
triple union user userid version view void wconfig wconfigCom wday widget \
window wrapStyle 
[Keywords for pascal files]
KEYWORDS_pascal=absolute abstract and array as asm assembler automated begin case \
cdecl class const constructor deprecated destructor dispid dispinterface div do downto \
dynamic else end except export exports external far file final finalization finally for \
forward function goto if implementation in inherited initialization inline interface is \
label library message mod near nil not object of on or out overload override packed \
pascal platform private procedure program property protected public published raise \
record register reintroduce repeat resourcestring safecall sealed set shl shr static \
stdcall strict string then threadvar to try type unit unsafe until uses var varargs \
virtual while with xor\
add default implements index name nodefault read readonly \
remove stored write writeonly\
package contains requires
[Keywords for perl files]
KEYWORDS_perl=NULL __FILE__ __LINE__ __PACKAGE__ __DATA__ __END__ AUTOLOAD \
BEGIN CORE DESTROY END EQ GE GT INIT LE LT NE CHECK abs accept \
alarm and atan2 bind binmode bless caller chdir chmod chomp chop \
chown chr chroot close closedir cmp connect continue cos crypt \
dbmclose dbmopen defined delete die do dump each else elsif endgrent \
endhostent endnetent endprotoent endpwent endservent eof eq eval \
exec exists exit exp fcntl fileno flock for foreach fork format \
formline ge getc getgrent getgrgid getgrnam gethostbyaddr gethostbyname \
gethostent getlogin getnetbyaddr getnetbyname getnetent getpeername \
getpgrp getppid getpriority getprotobyname getprotobynumber getprotoent \
getpwent getpwnam getpwuid getservbyname getservbyport getservent \
getsockname getsockopt glob gmtime goto grep gt hex if index \
int ioctl join keys kill last lc lcfirst le length link listen \
local localtime lock log lstat lt map mkdir msgctl msgget msgrcv \
msgsnd my ne next no not oct open opendir or ord our pack package \
pipe pop pos print printf prototype push quotemeta qu \
rand read readdir readline readlink readpipe recv redo \
ref rename require reset return reverse rewinddir rindex rmdir \
scalar seek seekdir select semctl semget semop send setgrent \
sethostent setnetent setpgrp setpriority setprotoent setpwent \
setservent setsockopt shift shmctl shmget shmread shmwrite shutdown \
sin sleep socket socketpair sort splice split sprintf sqrt srand \
stat study sub substr symlink syscall sysopen sysread sysseek \
system syswrite tell telldir tie tied time times truncate \
uc ucfirst umask undef unless unlink unpack unshift untie until \
use utime values vec wait waitpid wantarray warn while write \
xor \
given when default say state UNITCHECK
[Keywords for pol files]
KEYWORDS_pol=declare local include undef fopen fclose read write default version \
case range break debug error warning \
if ifdef ifndef switch while macro else end

KEYWORDS2_pol=camera light_source light_group \
object blob sphere cylinder box cone height_field julia_fractal \
lathe prism sphere_sweep superellipsoid sor text torus \
bicubic_patch disc mesh mesh2 polygon triangle smooth_triangle \
plane poly cubic quartic quadric isosurface parametric \
union intersection difference merge function array spline \
vertex_vectors normal_vectors uv_vectors face_indices normal_indices uv_indices \
texture texture_list interior_texture \
texture_map material_map image_map color_map colour_map pigment_map \
normal_map slope_map bump_map density_map \
pigment normal material interior finish reflection irid slope pigment_pattern image_pattern \
warp media scattering density background fog sky_sphere rainbow \
global_settings radiosity photons pattern \
transform looks_like projected_through contained_by clipped_by bounded_by

KEYWORDS4_pol=x y z t u v \
yes no true false on off \
clock clock_delta clock_on final_clock final_frame frame_number \
image_height image_width initial_clock initial_frame pi version

KEYWORDS5_pol=abs acos acosh asc asin asinh atan atanh atan2 \
ceil cos cosh defined degrees dimensions dimension_size div exp file_exists floor \
inside int ln log max min mod pow prod radians rand seed select sin sinh sqrt strcmp \
strlen sum tan tanh val vdot vlength min_extent max_extent trace vaxis_rotate \
vcross vrotate vnormalize vturbulence chr concat str strlwr strupr substr vstr \
sqr cube reciprocal pwr

[Keywords for pov files]
KEYWORDS_pov=declare local include undef fopen fclose read write default version \
case range break debug error warning \
if ifdef ifndef switch while macro else end

KEYWORDS2_pov=camera light_source light_group \
object blob sphere cylinder box cone height_field julia_fractal \
lathe prism sphere_sweep superellipsoid sor text torus \
bicubic_patch disc mesh mesh2 polygon triangle smooth_triangle \
plane poly cubic quartic quadric isosurface parametric \
union intersection difference merge function array spline \
vertex_vectors normal_vectors uv_vectors face_indices normal_indices uv_indices \
texture texture_list interior_texture \
texture_map material_map image_map color_map colour_map pigment_map \
normal_map slope_map bump_map density_map \
pigment normal material interior finish reflection irid slope pigment_pattern image_pattern \
warp media scattering density background fog sky_sphere rainbow \
global_settings radiosity photons pattern \
transform looks_like projected_through contained_by clipped_by bounded_by

KEYWORDS3_pov=linear_spline quadratic_spline cubic_spline natural_spline bezier_spline b_spline \
read write append inverse open \
perspective orthographic fisheye ultra_wide_angle omnimax panoramic \
spherical spotlight jitter circular orient \
media_attenuation media_interaction shadowless parallel \
refraction collect pass_through global_lights hierarchy sturm smooth \
gif tga iff pot png pgm ppm jpeg tiff sys ttf \
quaternion hypercomplex linear_sweep conic_sweep \
type all_intersections split_union cutaway_textures \
no_shadow no_image no_reflection double_illuminate hollow \
uv_mapping all use_index use_color use_colour no_bump_scale \
conserve_energy fresnel \
average agate boxed bozo bumps cells crackle cylindrical density_file dents \
facets granite leopard marble onion planar quilted radial ripples spotted waves wood wrinkles \
solid use_alpha interpolate magnet noise_generator toroidal \
ramp_wave triangle_wave sine_wave scallop_wave cubic_wave poly_wave \
once map_type method fog_type hf_gray_16 charset ascii utf8 \
rotate scale translate matrix location right up direction sky \
angle look_at aperture blur_samples focal_point confidence variance \
radius falloff tightness point_at area_light adaptive fade_distance fade_power \
threshold strength water_level tolerance max_iteration precision slice \
u_steps v_steps flatness inside_vector \
accuracy max_gradient evaluate max_trace precompute \
target ior dispersion dispersion_samples caustics \
color colour rgb rgbf rgbt rgbft red green blue filter transmit gray hf \
fade_color fade_colour quick_color quick_colour \
brick checker hexagon brick_size mortar bump_size \
ambient diffuse brilliance crand phong phong_size metallic specular \
roughness reflection_exponent exponent thickness \
gradient spiral1 spiral2 agate_turb form metric \
offset df3 coords size mandel exterior julia \
control0 control1 altitude turbulence octaves omega lambda \
repeat flip black-hole orientation dist_exp major_radius \
frequency phase intervals samples ratio absorption emission aa_threshold aa_level \
eccentricity extinction distance turb_depth fog_offset fog_alt width arc_angle falloff_angle \
adc_bailout ambient_light assumed_gamma irid_wavelength number_of_waves \
always_sample brigthness count error_bound gray_threshold load_file \
low_error_factor max_sample minimum_reuse nearest_count \
pretrace_end pretrace_start recursion_limit save_file \
spacing gather max_trace_level autostop expand_thresholds

KEYWORDS4_pov=x y z t u v \
yes no true false on off \
clock clock_delta clock_on final_clock final_frame frame_number \
image_height image_width initial_clock initial_frame pi version

KEYWORDS5_pov=abs acos acosh asc asin asinh atan atanh atan2 \
ceil cos cosh defined degrees dimensions dimension_size div exp file_exists floor \
inside int ln log max min mod pow prod radians rand seed select sin sinh sqrt strcmp \
strlen sum tan tanh val vdot vlength min_extent max_extent trace vaxis_rotate \
vcross vrotate vnormalize vturbulence chr concat str strlwr strupr substr vstr \
sqr cube reciprocal pwr

[Keywords for powerpro files]
KEYWORDS_powerpro=break do else elseif endfor endif for function global gt if ifelse \
ifx jump local lt quit static

KEYWORDS2_powerpro=bar case clip env exec fill flag floattostring format formattime ftos \
index input inputcancel inputdefault inputdialog join length messagebox mouse \
not note readline remove replace replacechars replaceg revindex select \
stof validpath visiblewindow wait wait.activity wait.for wait.forinterval wait.message \
wait.quit wait.ready wait.sleep wait.until wallpaper window window word \
win.debug win.debugshow win.exists win.getdisplayrect win.getfocus win.gethandle win.getrect \
win.getsystemmetrics win.gettext win.maximize win.minimize win.move win.sendkeys win.setdebug \
win.setfocus win.setrect win.settext win.show
[Keywords for powershell files]
KEYWORDS_powershell=break continue do else elseif filter for foreach function if in return switch until where while

KEYWORDS3_powershell=ac asnp clc cli clp clv cpi cpp cvpa diff epal epcsv fc fl foreach ft fw gal gc \
gci gcm gdr ghy gi gl gm gp gps group gsv gsnp gu gv gwmi iex ihy ii ipal ipcsv \
mi mp nal ndr ni nv oh rdr ri rni rnp rp rsnp rv rvpa sal sasv sc select si sl \
sleep sort sp spps spsv sv tee where write cat cd clear cp h history kill lp ls \
mount mv popd ps pushd pwd r rm rmdir echo cls chdir copy del dir erase move rd \
ren set type
[Keywords for ps files]
KEYWORDS_ps=$error = == FontDirectory StandardEncoding UserObjects abs add aload \
anchorsearch and arc arcn arcto array ashow astore atan awidthshow begin bind \
bitshift bytesavailable cachestatus ceiling charpath clear cleardictstack \
cleartomark clip clippath closefile closepath concat concatmatrix copy copypage \
cos count countdictstack countexecstack counttomark currentcmykcolor \
currentcolorspace currentdash currentdict currentfile currentflat currentfont \
currentgray currenthsbcolor currentlinecap currentlinejoin currentlinewidth \
currentmatrix currentmiterlimit currentpagedevice currentpoint currentrgbcolor \
currentscreen currenttransfer cvi cvlit cvn cvr cvrs cvs cvx def defaultmatrix \
definefont dict dictstack div dtransform dup echo end eoclip eofill eq \
erasepage errordict exch exec execstack executeonly executive exit exp false \
file fill findfont flattenpath floor flush flushfile for forall ge get \
getinterval grestore grestoreall gsave gt idetmatrix idiv idtransform if ifelse \
image imagemask index initclip initgraphics initmatrix inustroke invertmatrix \
itransform known kshow le length lineto ln load log loop lt makefont mark \
matrix maxlength mod moveto mul ne neg newpath noaccess nor not null nulldevice \
or pathbbox pathforall pop print prompt pstack put putinterval quit rand rcheck \
rcurveto read readhexstring readline readonly readstring rectstroke repeat \
resetfile restore reversepath rlineto rmoveto roll rotate round rrand run save \
scale scalefont search setblackgeneration setcachedevice setcachelimit \
setcharwidth setcolorscreen setcolortransfer setdash setflat setfont setgray \
sethsbcolor setlinecap setlinejoin setlinewidth setmatrix setmiterlimit \
setpagedevice setrgbcolor setscreen settransfer setvmthreshold show showpage \
sin sqrt srand stack start status statusdict stop stopped store string \
stringwidth stroke strokepath sub systemdict token token transform translate \
true truncate type ueofill undefineresource userdict usertime version vmstatus \
wcheck where widthshow write writehexstring writestring xcheck xor

KEYWORDS2_ps=GlobalFontDirectory ISOLatin1Encoding SharedFontDirectory UserObject arct \
colorimage cshow currentblackgeneration currentcacheparams currentcmykcolor \
currentcolor currentcolorrendering currentcolorscreen currentcolorspace \
currentcolortransfer currentdevparams currentglobal currentgstate \
currenthalftone currentobjectformat currentoverprint currentpacking \
currentpagedevice currentshared currentstrokeadjust currentsystemparams \
currentundercolorremoval currentuserparams defineresource defineuserobject \
deletefile execform execuserobject filenameforall fileposition filter \
findencoding findresource gcheck globaldict glyphshow gstate ineofill infill \
instroke inueofill inufill inustroke languagelevel makepattern packedarray \
printobject product realtime rectclip rectfill rectstroke renamefile \
resourceforall resourcestatus revision rootfont scheck selectfont serialnumber \
setbbox setblackgeneration setcachedevice2 setcacheparams setcmykcolor setcolor \
setcolorrendering setcolorscreen setcolorspace setcolortranfer setdevparams \
setfileposition setglobal setgstate sethalftone setobjectformat setoverprint \
setpacking setpagedevice setpattern setshared setstrokeadjust setsystemparams \
setucacheparams setundercolorremoval setuserparams setvmthreshold shareddict \
startjob uappend ucache ucachestatus ueofill ufill undef undefinefont \
undefineresource undefineuserobject upath ustroke ustrokepath vmreclaim \
writeobject xshow xyshow yshow

KEYWORDS3_ps=cliprestore clipsave composefont currentsmoothness findcolorrendering \
setsmoothness shfill

KEYWORDS4_ps=.begintransparencygroup .begintransparencymask .bytestring .charboxpath \
.currentaccuratecurves .currentblendmode .currentcurvejoin .currentdashadapt \
.currentdotlength .currentfilladjust2 .currentlimitclamp .currentopacityalpha \
.currentoverprintmode .currentrasterop .currentshapealpha \
.currentsourcetransparent .currenttextknockout .currenttexturetransparent \
.dashpath .dicttomark .discardtransparencygroup .discardtransparencymask \
.endtransparencygroup .endtransparencymask .execn .filename .filename \
.fileposition .forceput .forceundef .forgetsave .getbitsrect .getdevice \
.inittransparencymask .knownget .locksafe .makeoperator .namestring .oserrno \
.oserrorstring .peekstring .rectappend .runandhide .setaccuratecurves \
.setblendmode .setcurvejoin .setdashadapt .setdebug .setdefaultmatrix \
.setdotlength .setfilladjust2 .setlimitclamp .setmaxlength .setopacityalpha \
.setoverprintmode .setrasterop .setsafe .setshapealpha .setsourcetransparent \
.settextknockout .settexturetransparent .stringbreak .stringmatch .tempfile \
.type1decrypt .type1encrypt .type1execchar .unread arccos arcsin copydevice \
copyscanlines currentdevice finddevice findlibfile findprotodevice flushpage \
getdeviceprops getenv makeimagedevice makewordimagedevice max min \
putdeviceprops setdevice
[Keywords for purebasic files]
KEYWORDS_purebasic=and break case continue data \
datasection declare declarecdll declaredll default deftype dim else \
elseif end enddatasection endenumeration endif endinterface endprocedure \
endselect endstructure endstructureunion enumeration extends fakereturn \
for foreach forever global gosub goto if includebinary includefile \
includepath interface newlist next or procedure procedurecdll \
proceduredll procedurereturn protected read repeat restore return select \
shared static step structure structureunion to until wend while xincludefile

KEYWORDS2_purebasic=compilercase compilerdefault \
compilerelse compilerendif compilerendselect compilerif compilerselect
[Keywords for python files]
KEYWORDS_python=and as assert break class continue def del elif \
else except exec finally for from global if import in is lambda None \
not or pass print raise return try while with yield
[Keywords for r files]
KEYWORDS_r=if else repeat while function for in next break TRUE FALSE NULL NA Inf NaN

KEYWORDS2_r=abbreviate abline abs acf acos acosh addmargins aggregate agrep alarm alias alist all anova any aov aperm append apply approx approxfun apropos ar args arima array arrows asin asinh assign assocplot atan atanh attach attr attributes autoload autoloader ave axis backsolve barplot basename beta bindtextdomain binomial biplot bitmap bmp body box boxplot bquote break browser builtins bxp by bzfile c call cancor capabilities casefold cat category cbind ccf ceiling character charmatch chartr chol choose chull citation class close cm cmdscale codes coef coefficients col colnames colors colorspaces colours comment complex confint conflicts contour contrasts contributors convolve cophenetic coplot cor cos cosh cov covratio cpgram crossprod cummax cummin cumprod cumsum curve cut cutree cycle data dataentry date dbeta dbinom dcauchy dchisq de debug debugger decompose delay deltat demo dendrapply density deparse deriv det detach determinant deviance dexp df dfbeta dfbetas dffits dgamma dgeom dget dhyper diag diff diffinv difftime digamma dim dimnames dir dirname dist dlnorm dlogis dmultinom dnbinom dnorm dotchart double dpois dput drop dsignrank dt dump dunif duplicated dweibull dwilcox eapply ecdf edit effects eigen emacs embed end environment eval evalq example exists exp expression factanal factor factorial family fft fifo file filter find fitted fivenum fix floor flush for force formals format formula forwardsolve fourfoldplot frame frequency ftable function gamma gaussian gc gcinfo gctorture get getenv geterrmessage gettext gettextf getwd gl glm globalenv gray grep grey grid gsub gzcon gzfile hat hatvalues hcl hclust head heatmap help hist history hsv httpclient iconv iconvlist identical identify if ifelse image influence inherits integer integrate interaction interactive intersect invisible isoreg jitter jpeg julian kappa kernapply kernel kmeans knots kronecker ksmooth labels lag lapply layout lbeta lchoose lcm legend length letters levels lfactorial lgamma library licence license line lines list lm load loadhistory loadings local locator loess log logb logical loglin lowess ls lsfit machine mad mahalanobis makepredictcall manova mapply match matlines matplot matpoints matrix max mean median medpolish menu merge message methods mget min missing mode monthplot months mosaicplot mtext mvfft names napredict naprint naresid nargs nchar ncol next nextn ngettext nlevels nlm nls noquote nrow numeric objects offset open optim optimise optimize options order ordered outer pacf page pairlist pairs palette par parse paste pbeta pbinom pbirthday pcauchy pchisq pdf pentagamma person persp pexp pf pgamma pgeom phyper pi pico pictex pie piechart pipe plclust plnorm plogis plot pmatch pmax pmin pnbinom png pnorm points poisson poly polygon polym polyroot postscript power ppoints ppois ppr prcomp predict preplot pretty princomp print prmatrix prod profile profiler proj promax prompt provide psigamma psignrank pt ptukey punif pweibull pwilcox q qbeta qbinom qbirthday qcauchy qchisq qexp qf qgamma qgeom qhyper qlnorm qlogis qnbinom qnorm qpois qqline qqnorm qqplot qr qsignrank qt qtukey quantile quarters quasi quasibinomial quasipoisson quit qunif quote qweibull qwilcox rainbow range rank raw rbeta rbind rbinom rcauchy rchisq readline real recover rect reformulate regexpr relevel remove reorder rep repeat replace replicate replications require reshape resid residuals restart return rev rexp rf rgamma rgb rgeom rhyper rle rlnorm rlogis rm rmultinom rnbinom rnorm round row rownames rowsum rpois rsignrank rstandard rstudent rt rug runif runmed rweibull rwilcox sample sapply save savehistory scale scan screen screeplot sd search searchpaths seek segments seq sequence serialize setdiff setequal setwd shell sign signif sin single sinh sink smooth solve sort source spectrum spline splinefun split sprintf sqrt stack stars start stderr stdin stdout stem step stepfun stl stop stopifnot str strftime strheight stripchart strptime strsplit strtrim structure strwidth strwrap sub subset substitute substr substring sum summary sunflowerplot supsmu svd sweep switch symbols symnum system t table tabulate tail tan tanh tapply tempdir tempfile termplot terms tetragamma text time title toeplitz tolower topenv toupper trace traceback transform trigamma trunc truncate try ts tsdiag tsp typeof unclass undebug union unique uniroot unix unlink unlist unname unserialize unsplit unstack untrace unz update upgrade url var varimax vcov vector version vi vignette warning warnings weekdays weights which while window windows with write wsbrowser xedit xemacs xfig xinch xor xtabs xyinch yinch zapsmall

KEYWORDS3_r=acme aids aircondit amis aml banking barchart barley beaver bigcity boot brambles breslow bs bwplot calcium cane capability cav censboot channing city claridge cloth cloud coal condense contourplot control corr darwin densityplot dogs dotplot ducks empinf envelope environmental ethanol fir frets gpar grav gravity grob hirose histogram islay knn larrows levelplot llines logit lpoints lsegments lset ltext lvqinit lvqtest manaus melanoma melanoma motor multiedit neuro nitrofen nodal ns nuclear oneway parallel paulsen poisons polar qq qqmath remission rfs saddle salinity shingle simplex singer somgrid splom stripplot survival tau tmd tsboot tuna unit urine viewport wireframe wool xyplot
[Keywords for rebol files]
KEYWORDS_rebol=about abs absolute add \
alert alias all alter and \
any any-block? any-function? any-string? any-type? \
any-word? append arccosine arcsine arctangent \
array as-pair ask at attempt \
back binary? bind bitset? block? \
break brightness? browse build-tag caret-to-offset \
catch center-face change change-dir char? \
charset checksum choose clean-path clear \
clear-fields close comment complement component? \
compose compress confirm connected? construct \
context copy cosine datatype? date? \
debase decimal? decode-cgi decompress dehex \
delete detab difference dir? dirize \
disarm dispatch divide do do-events \
does dump-face dump-obj echo either \
else email? empty? enbase entab \
equal? error? even? event? exclude \
exists? exit exp extract fifth \
file? find first flash focus \
for forall foreach forever form \
forskip found? fourth free func \
function function? get get-modes get-word? \
greater-or-equal? greater? halt has hash? \
head head? help hide hide-popup \
if image? import-email in in-window? \
index? info? inform input input? \
insert integer? intersect issue? join \
last launch layout length? lesser-or-equal? \
lesser? library? license link? list-dir \
list? lit-path? lit-word? load load-image \
log-10 log-2 log-e logic? loop \
lowercase make make-dir make-face max \
maximum maximum-of min minimum minimum-of \
modified? mold money? multiply native? \
negate negative? next none? not \
not-equal? now number? object? odd? \
offset-to-caret offset? op? open or \
pair? paren? parse parse-xml path? \
pick poke port? positive? power \
prin print probe protect protect-system \
query quit random read read-io \
recycle reduce refinement? reform rejoin \
remainder remold remove remove-each rename \
repeat repend replace request request-color \
request-date request-download request-file request-list request-pass \
request-text resend return reverse routine? \
same? save script? second secure \
select send series? set set-modes \
set-net set-path? set-word? show show-popup \
sign? sine size-text size? skip \
sort source span? split-path square-root \
strict-equal? strict-not-equal? string? struct? stylize \
subtract suffix? switch tag? tail \
tail? tangent third throw time? \
to to-binary to-bitset to-block to-char \
to-date to-decimal to-email to-file to-get-word \
to-hash to-hex to-idate to-image to-integer \
to-issue to-list to-lit-path to-lit-word to-local-file \
to-logic to-money to-pair to-paren to-path \
to-rebol-file to-refinement to-set-path to-set-word to-string \
to-tag to-time to-tuple to-url to-word \
trace trim try tuple? type? \
unfocus union unique unprotect unset \
unset? until unview update upgrade \
uppercase url? usage use value? \
view viewed? wait what what-dir \
while within? word? write write-io xor zero? 

KEYWORDS3_rebol=action! any-block! any-function! any-string! any-type! \
 any-word! binary! bitset! block! char! datatype! date! decimal! email! error! \
 event! file! function! get-word! hash! image! integer! issue! library! list! lit-path! \
 lit-word! logic! money! native! none! number! object! op! pair! paren! path! \
 port! refinement! routine! series! set-path! set-word! string! struct! symbol! tag! \
 time! tuple! unset! url! word!
[Keywords for scheme files]
KEYWORDS_scheme=
+ - * / = < > <= >= => \
abs acos and angle append apply asin assoc assoc assq assv atan \
begin boolean? \
caar cadr call-with-current-continuation call/cc \
call-with-input-file call-with-output-file call-with-values \
car cdr \
caar cadr cdar cddr \
caaar caadr cadar caddr cdaar cdadr cddar cdddr \
caaaar caaadr caadar caaddr cadaar cadadr caddar cadddr \
cdaaar cdaadr cdadar cdaddr cddaar cddadr cdddar cddddr \
case ceiling char->integer \
char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? \
char-downcase char-lower-case? char-numeric? char-ready? \
char-upcase char-upper-case? char-whitespace? \
char<=? char<? char=? char>=? char>? char? \
close-input-port close-output-port complex? cond cons cos \
current-input-port current-output-port \
define define-syntax delay denominator display do dynamic-wind \
else eof-object? eq? equal? eqv? eval even? exact->inexact exact? \
exp expt \
floor for-each force \
gcd \
if imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment \
lambda lcm length let let* let-syntax letrec letrec-syntax \
list list->string list->vector list-ref list-tail list? load log \
magnitude make-polar make-rectangular make-string make-vector \
map max member memq memv min modulo \
negative? newline not null-environment null? number->string number? numerator \
odd? open-input-file open-output-file or output-port? \
pair? peek-char input-port? output-port? positive? procedure? \
quasiquote quote quotient \
rational? rationalize read read-char real-part real? remainder reverse round \
scheme-report-environment set! set-car! set-cdr! sin sqrt string \
string->list string->number string->symbol string-append \
string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? \
string-copy string-fill! string-length string-ref string-set! \
string<=? string<? string=? string>=? string>? string? \
substring symbol->string symbol? syntax-rules \
transcript-off transcript-on truncate \
unquote unquote-splicing \
values vector vector->list vector-fill! vector-length vector-ref vector-set! vector? \
with-input-from-file with-output-to-file write write-char \
zero?
[Keywords for scriptol files]
KEYWORDS_scriptol=act action alias always and array as \
bool boolean break by byte \
class case catch const constant continue \
dyn def define dict do double \
echo else elsif end enum error false file for float forever function \
globak gtk \
in if ifdef import include int integer java javax \
let long match mod nil not natural null number \
or print protected public real return redo \
scan script scriptol sol short super static step until using \
var text then this true try \
void volatile while when \
undef zero
[Keywords for smalltalk files]
KEYWORDS_smalltalk=ifTrue: ifFalse: whileTrue: whileFalse: ifNil: ifNotNil: whileTrue whileFalse repeat isNil notNil
[Keywords for specman files]
KEYWORDS_specman=struct unit \
integer real bool int long uint nibble byte bits bytes bit time string \
var instance event \
verilog vhdl \
on compute start expect check that routine \
specman is also first only with like \
list of all radix hex dec bin ignore illegal \
traceable untraceable \
cover using count_only trace_only at_least transition item ranges \
cross text call task within \
packing low high \
locker address \
body code vec chars \
byte_array external_pointer \
choose matches \
if then else when try \
case casex casez default \
and or not xor \
until repeat while for from to step each do break continue \
before next always -kind network \
index it me in new return result select \
cycle sample events forever \
wait  change  negedge rise fall delay sync sim true detach eventually emit \
gen keep keeping soft before \
define as computed type extend \
variable global sys \
import \
untyped symtab ECHO DOECHO \
initialize non_terminal testgroup delayed exit finish \
out append print outf appendf \
post_generate pre_generate setup_test finalize_test extract_test \
init run copy as_a a set_config dut_error add clear lock quit \
lock unlock release swap quit to_string value stop_run \
crc_8 crc_32 crc_32_flip get_config add0 all_indices and_all \
apply average count delete exists first_index get_indices \
has insert is_a_permutation is_empty key key_exists key_index \
last last_index max max_index max_value min min_index \
min_value or_all pop pop0 push push0 product resize reverse \
sort split sum top top0 unique clear is_all_iterations \
get_enclosing_unit hdl_path exec deep_compare deep_compare_physical \
pack unpack warning error fatal \
size \
files load module ntv source_ref script read write \
initial idle others posedge clock cycles \
statement action command member exp block num file

KEYWORDS2_specman=TRUE FALSE MAX_INT MIN_INT NULL UNDEF 

KEYWORDS3_specman=any_sequence_item sequence any_sequence_driver driver \
created_driver  parent_sequence \
bfm_interaction_mode PULL_MODE PUSH_MODE MAIN SIMPLE RANDOM \
max_random_count max_random_depth num_of_last_items \
NORMAL NONE FULL LOW HIGH MEDIUM logger message \
get_tags show_units show_actions show_message ignore_tags \
set_style set_screen set_file set_flush_frequency \
set_format set_units set_actions at_message_verbosity \
short_name short_name_path short_name_style \
\
private protected package rerun any_env \
unqualified_clk clk reset_start reset_end \
message_logger verbosity tags to_file \
\
body pre_body post_body get_next_item send_to_bfm \
get_depth get_driver nice_string get_index grab \
is_blocked is_relevant ungrab mid_do post_do post_trace \
pre_do current_grabber get_current_item get_num_items_sent \
get_sequence_trace_list get_trace_list is_grabbed \
try_next_item check_is_relevant delay_clock \
get_sub_drivers regenerate_data wait_for_sequences \
stop
[Keywords for sql files]
KEYWORDS_sql=absolute action add admin after aggregate \
alias all allocate alter and any are array as asc \
assertion at authorization \
before begin binary bit blob boolean both breadth by \
call cascade cascaded case cast catalog char character \
check class clob close collate collation column commit \
completion connect connection constraint constraints \
constructor continue corresponding create cross cube current \
current_date current_path current_role current_time current_timestamp \
current_user cursor cycle \
data date day deallocate dec decimal declare default \
deferrable deferred delete depth deref desc describe descriptor \
destroy destructor deterministic dictionary diagnostics disconnect \
distinct domain double drop dynamic \
each else end end-exec equals escape every except \
exception exec execute external \
false fetch first float for foreign found from free full \
function \
general get global go goto grant group grouping \
having host hour \
identity if ignore immediate in indicator initialize initially \
inner inout input insert int integer intersect interval \
into is isolation iterate \
join \
key \
language large last lateral leading left less level like \
limit local localtime localtimestamp locator \
map match minute modifies modify module month \
names national natural nchar nclob new next no none \
not null numeric \
object of off old on only open operation option \
or order ordinality out outer output \
pad parameter parameters partial path postfix precision prefix \
preorder prepare preserve primary \
prior privileges procedure public \
read reads real recursive ref references referencing relative \
restrict result return returns revoke right \
role rollback rollup routine row rows \
savepoint schema scroll scope search second section select \
sequence session session_user set sets size smallint some| space \
specific specifictype sql sqlexception sqlstate sqlwarning start \
state statement static structure system_user \
table temporary terminate than then time timestamp \
timezone_hour timezone_minute to trailing transaction translation \
treat trigger true \
under union unique unknown \
unnest update usage user using \
value values varchar variable varying view \
when whenever where with without work write \
year \
zone
[Keyowrds for tcl files]
KEYWORDS_tcl=after append array auto_execok \
auto_import auto_load auto_load_index auto_qualify \
beep bgerror binary break case catch cd clock \
close concat continue dde default echo else elseif \
encoding eof error eval exec exit expr fblocked \
fconfigure fcopy file fileevent flush for foreach format \
gets glob global history http if incr info \
interp join lappend lindex linsert list llength load \
loadTk lrange lreplace lsearch lset lsort memory msgcat \
namespace open package pid pkg::create pkg_mkIndex Platform-specific proc \
puts pwd re_syntax read regexp registry regsub rename \
resource return scan seek set socket source split \
string subst switch tclLog tclMacPkgSearch tclPkgSetup tclPkgUnknown tell \
time trace unknown unset update uplevel upvar variable \
vwait while

KEYWORDS2_tcl=bell bind bindtags bitmap button canvas checkbutton clipboard \
colors console cursors destroy entry event focus font \
frame grab grid image Inter-client keysyms label labelframe \
listbox lower menu menubutton message option options pack \
panedwindow photo place radiobutton raise scale scrollbar selection \
send spinbox text tk tk_chooseColor tk_chooseDirectory tk_dialog tk_focusNext \
tk_getOpenFile tk_messageBox tk_optionMenu tk_popup tk_setPalette tkerror tkvars tkwait \
toplevel winfo wish wm \
expand


KEYWORDS3_tcl=tk_bisque tk_chooseColor tk_dialog tk_focusFollowsMouse tk_focusNext \
tk_focusPrev tk_getOpenFile tk_getSaveFile tk_messageBox tk_optionMenu \
tk_popup tk_setPalette tk_textCopy tk_textCut tk_textPaste \
tkButtonAutoInvoke tkButtonDown tkButtonEnter tkButtonInvoke tkButtonLeave \
tkButtonUp tkCancelRepeat tkCheckRadioDown tkCheckRadioEnter tkCheckRadioInvoke \
tkColorDialog tkColorDialog_BuildDialog tkColorDialog_CancelCmd tkColorDialog_Config tkColorDialog_CreateSelector \
tkColorDialog_DrawColorScale tkColorDialog_EnterColorBar tkColorDialog_HandleRGBEntry tkColorDialog_HandleSelEntry tkColorDialog_InitValues \
tkColorDialog_LeaveColorBar tkColorDialog_MoveSelector tkColorDialog_OkCmd tkColorDialog_RedrawColorBars tkColorDialog_RedrawFinalColor \
tkColorDialog_ReleaseMouse tkColorDialog_ResizeColorBars tkColorDialog_RgbToX tkColorDialog_SetRGBValue tkColorDialog_StartMove \
tkColorDialog_XToRgb tkConsoleAbout tkConsoleBind tkConsoleExit tkConsoleHistory \
tkConsoleInit tkConsoleInsert tkConsoleInvoke tkConsoleOutput tkConsolePrompt \
tkConsoleSource tkDarken tkEntryAutoScan tkEntryBackspace tkEntryButton1 \
tkEntryClosestGap tkEntryGetSelection tkEntryInsert tkEntryKeySelect tkEntryMouseSelect \
tkEntryNextWord tkEntryPaste tkEntryPreviousWord tkEntrySeeInsert tkEntrySetCursor \
tkEntryTranspose tkEventMotifBindings tkFDGetFileTypes tkFirstMenu tkFocusGroup_BindIn \
tkFocusGroup_BindOut tkFocusGroup_Create tkFocusGroup_Destroy tkFocusGroup_In tkFocusGroup_Out \
tkFocusOK tkGenerateMenuSelect tkIconList tkIconList_Add tkIconList_Arrange \
tkIconList_AutoScan tkIconList_Btn1 tkIconList_Config tkIconList_Create tkIconList_CtrlBtn1 \
tkIconList_Curselection tkIconList_DeleteAll tkIconList_Double1 tkIconList_DrawSelection tkIconList_FocusIn \
tkIconList_FocusOut tkIconList_Get tkIconList_Goto tkIconList_Index tkIconList_Invoke \
tkIconList_KeyPress tkIconList_Leave1 tkIconList_LeftRight tkIconList_Motion1 tkIconList_Reset \
tkIconList_ReturnKey tkIconList_See tkIconList_Select tkIconList_Selection tkIconList_ShiftBtn1 \
tkIconList_UpDown tkListbox tkListboxAutoScan tkListboxBeginExtend tkListboxBeginSelect \
tkListboxBeginToggle tkListboxCancel tkListboxDataExtend tkListboxExtendUpDown tkListboxKeyAccel_Goto \
tkListboxKeyAccel_Key tkListboxKeyAccel_Reset tkListboxKeyAccel_Set tkListboxKeyAccel_Unset tkListboxMotion \
tkListboxSelectAll tkListboxUpDown tkMbButtonUp tkMbEnter tkMbLeave \
tkMbMotion tkMbPost tkMenuButtonDown tkMenuDownArrow tkMenuDup \
tkMenuEscape tkMenuFind tkMenuFindName tkMenuFirstEntry tkMenuInvoke \
tkMenuLeave tkMenuLeftArrow tkMenuMotion tkMenuNextEntry tkMenuNextMenu \
tkMenuRightArrow tkMenuUnpost tkMenuUpArrow tkMessageBox tkMotifFDialog \
tkMotifFDialog_ActivateDList tkMotifFDialog_ActivateFEnt tkMotifFDialog_ActivateFList tkMotifFDialog_ActivateSEnt tkMotifFDialog_BrowseDList \
tkMotifFDialog_BrowseFList tkMotifFDialog_BuildUI tkMotifFDialog_CancelCmd tkMotifFDialog_Config tkMotifFDialog_Create \
tkMotifFDialog_FileTypes tkMotifFDialog_FilterCmd tkMotifFDialog_InterpFilter tkMotifFDialog_LoadFiles tkMotifFDialog_MakeSList \
tkMotifFDialog_OkCmd tkMotifFDialog_SetFilter tkMotifFDialog_SetListMode tkMotifFDialog_Update tkPostOverPoint \
tkRecolorTree tkRestoreOldGrab tkSaveGrabInfo tkScaleActivate tkScaleButton2Down \
tkScaleButtonDown tkScaleControlPress tkScaleDrag tkScaleEndDrag tkScaleIncrement \
tkScreenChanged tkScrollButton2Down tkScrollButtonDown tkScrollButtonDrag tkScrollButtonUp \
tkScrollByPages tkScrollByUnits tkScrollDrag tkScrollEndDrag tkScrollSelect \
tkScrollStartDrag tkScrollTopBottom tkScrollToPos tkTabToWindow tkTearOffMenu \
tkTextAutoScan tkTextButton1 tkTextClosestGap tkTextInsert tkTextKeyExtend \
tkTextKeySelect tkTextNextPara tkTextNextPos tkTextNextWord tkTextPaste \
tkTextPrevPara tkTextPrevPos tkTextPrevWord tkTextResetAnchor tkTextScrollPages \
tkTextSelectTo tkTextSetCursor tkTextTranspose tkTextUpDownLine tkTraverseToMenu \
tkTraverseWithinMenu
[Keywords for vb files]
KEYWORDS_vb=addressof alias and as attribute base begin binary boolean byref byte byval call case cdbl \
cint clng compare const csng cstr currency date decimal declare defbool defbyte defcur \
defdate defdbl defdec defint deflng defobj defsng defstr defvar dim do double each else \
elseif empty end enum eqv erase error event exit explicit false for friend function get \
global gosub goto if imp implements in input integer is len let lib like load lock long \
loop lset me mid midb mod new next not nothing null object on option optional or paramarray \
preserve print private property public raiseevent randomize redim rem resume return rset \
seek select set single static step stop string sub text then time to true type typeof \
unload until variant wend while with withevents xor

KEYWORDS2_vb=addhandler andalso ansi assembly auto catch cbool cbyte cchar cdate cdec char class \
cobj continue csbyte cshort ctype cuint culng cushort custom default delegate directcast \
endif externalsource finally gettype handles imports inherits interface isfalse isnot \
istrue module mustinherit mustoverride my mybase myclass namespace narrowing notinheritable \
notoverridable of off operator orelse overloads overridable overrides partial protected \
readonly region removehandler sbyte shadows shared short strict structure synclock \
throw try trycast uinteger ulong unicode ushort using when widening writeonly

KEYWORDS3_vb=appactivate beep chdir chdrive close filecopy get input kill line unlock mkdir name \
open print put reset rmdir savepicture savesetting seek sendkeys setattr width write
[Keywords for verilog files]
KEYWORDS_verilog=always and assign automatic \
begin buf bufif0 bufif1 \
case casex casez cell cmos config \
deassign default defparam design disable \
edge else end endcase endconfig endfunction endgenerate endmodule endprimitive endspecify endtable endtask event \
for force forever fork function \
generate genvar \
highz0 highz1 \
if ifnone incdir include initial inout input instance integer \
join \
large liblist library localparam \
macromodule medium module \
nand negedge nmos nor noshowcancelled not notif0 notif1 \
or output \
parameter pmos posedge primitive pull0 pull1 pulldown pullup pulsestyle_ondetect pulsestyle_onevent \
rcmos real realtime reg release repeat rnmos rpmos rtran rtranif0 rtranif1 \
scalared showcancelled signed small specify specparam strong0 strong1 supply0 supply1 \
table task time tran tranif0 tranif1 tri tri0 tri1 triand trior trireg \
unsigned use \
vectored \
wait wand weak0 weak1 while wire wor \
xnor xor
[Keywords for vhdl files]
KEYWORDS_vhdl=\
access after alias all architecture array assert attribute begin block \
body buffer bus case component configuration constant disconnect downto else elsif end entity exit file \
for function generate generic group guarded if impure in inertial inout is label library linkage literal \
loop map new next null of on open others out package port postponed procedure process pure range record \
register reject report return select severity shared signal subtype then to transport type unaffected \
units until use variable wait when while with

KEYWORDS2_vhdl=\
 abs and mod nand nor not or rem rol ror sla sll sra srl xnor xor
 
KEYWORDS3_vhdl=\
 left right low high ascending image value pos val succ pred leftof rightof base range reverse_range        \
 length delayed stable quiet transaction event active last_event last_active last_value driving             \
 driving_value simple_name path_name instance_name

KEYWORDS4_vhdl=\
 now readline read writeline write endfile resolved to_bit to_bitvector to_stdulogic to_stdlogicvector      \
 to_stdulogicvector to_x01 to_x01z to_UX01 rising_edge falling_edge is_x shift_left shift_right rotate_left \
 rotate_right resize to_integer to_unsigned to_signed std_match to_01

KEYWORDS5_vhdl=\
 std ieee work standard textio std_logic_1164 std_logic_arith std_logic_misc std_logic_signed               \
 std_logic_textio std_logic_unsigned numeric_bit numeric_std math_complex math_real vital_primitives        \
 vital_timing

KEYWORDS6_vhdl=\
 boolean bit character severity_level integer real time delay_length natural positive string bit_vector \
 file_open_kind file_open_status line text side width std_ulogic std_ulogic_vector std_logic \
 std_logic_vector X01 X01Z UX01 UX01Z unsigned signed
[Keywords for yaml files]
KEYWORDS_yaml=true false yes no
[Keywords for tacl files]
KEYWORDS_tacl=activate add adddsttransition adduser alter altpri assign attachseg backupcpu break builtins buscmd clear columnize comment compute copy dump copyvar create createseg debug debugnow default delete deluser detachseg env exit fileinfo filenames files filetovar help history home info initterm inlecho inleof inlout inlprefix inlto join keep keys lights load loaded files logoff logon o obey outvar param password pause pmsearch pmsg pop ppd purge push rcvdump receivedump reload remotepassword rename reset rpasswrd run rund seginfo set setprompt settime show sink status stop suspend switch system systimes time timestamp_to_text useusers variables varinfo vartofile vchange vcopy vdelete vfind vinsert vlist vmove volume vtree wakeup who xbusdown xbusup ybusdown ybusup _comparev _contime_to_text _contime_to_text_date _contime_to_text_time _debugger _execute _longest _month3
