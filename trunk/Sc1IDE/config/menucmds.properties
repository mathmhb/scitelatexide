## this file contains some basic settings for menucmds.lua
[API & Abbr Paths]:: define where to put *.api and *.abbr
API_PATH=$(SciteDefaultHome)/lang/
ABBR_PATH=$(SciteDefaultHome)/lang/

[Static File Types]:: define static file types
## static file types (languages) are determined from file name extensions
## each line should have the following format:
##   file type|extensions|description|api_file|abbr_file|hot_key|lexer;;\

## Note1: If description is empty or starts with #, this language will not enter the menu "Languages".
## Note2: To specify lexer, use the format "lexer==>xxx" where xxx is one of the following lexers prebuilt:
#~ apdl asm asn1 asy au3 ave baan bash basic bib bullant caml clw cmake cobol conf cpp crontab csound css d eiffel erlang ers.a lexescript euphoria flagship forth fortran gap gui4cli haskell html inno kix latex lisp lout lua magik matlab metapost mmixal mpt mssql mysql nimrod nsis opal pascal pb perl plm pov powerpro powershell progress ps python r rebol ruby scriptol smalltalk sml sorcus specman spice sql tacl tads3 tal tcl vb verilog vhdl yaml batch props makefile diff errorlist

FILE_TYPES=\
latex|ltx tex ctx ty dtx sty cls ins fd fdd|TeX/LaTeX/ConTeXt|tex.api|tex.abbr|lexer==>latex;;\
bst|bst|lexer==>cpp;;\
bib|bib|lexer==>bib;;\
metapost|mp mpx mpy|lexer==>metapost;;\
metafont|mf|lexer==>pascal;;\
asy|asy|Asymptote|asy.api|lexer==>asy;;\
tpx|TpX tpx|#TpX|lexer==>latex;;\
lout|lt lout|#Lout|lexer==>lout;;\
ps|ps eps|#PostScript|lexer==>ps;;\
bash|sh bash|lexer==>bash;;\
batch|btm bat cmd rexx nt|lexer==>batch;;\
lua|lua lux luax l|Lua script|scite.api|lexer==>lua;;\
matlab|m sci sce octave asv|lexer==>matlab;;\
rlab|r|Rlab script|lexer==>cpp;;\
R|r s|R and R-like|lexer==>r;;\
ox|ox|Ox script|lexer==>cpp;;\
yorick|i|Yorick script|lexer==>cpp;;\
yacas|ys yts|Yacas script|lexer==>cpp;;\
pascal|dpr dpk dfm pas p pp|lexer==>pascal;;\
cs|cs|C#|lexer==>cs;;\
ch|ch chf chs|#Ch|c.api|c.abbr|lexer==>ch;;\
cpp|c cc cxx cpp h hpp hxx bpr cu|C/C++|c.api|c.abbr|lexer==>cpp;;\
rc|rc rc2 dlg|Resource|lexer==>cpp;;\
idl|idl odl|#IDL|lexer==>cpp;;\
flash|as asc jsfl|#Flash|lexer==>cpp;\
vala|vala|#Vala|lexer==>cpp;;\
java|java jav|Java|lexer==>cpp;;\
js|js|Java Script||lexer==>cpp;;\
javafx|fx|#JavaFX|lexer==>cpp;;\
fortran|f for f90 f95 f2k|Fortran|lexer==>fortran;;\
asm|asm asi S inc mac|Assembler|lexer==>asm;;\
ada|ads ada adb|#Ada||lexer==>ada;;\
props|properties session ini inf reg url cfg cnf aut abbr api cache|Properties|lexer==>props;;\
euphoria|ex exw e ew|#Euphoria script|lexer==>lua;;\
idle|idle|#Idle script|lexer==>lua;;\
perl|pl pm cgi pod|#Perl|lexer==>perl;;\
py|py pyw|Python|lexer==>python;;\
ruby|rb rbw|#Ruby|lexer==>ruby;;\
kix|kix|#Kix|lexer==>kix;;\
smalltalk|st|#Smalltalk|lexer==>smalltalk;;\
sql|sql|#SQL||lexer==>sql;;\
forth|4th fs spf|#Forth|lexer==>forth;;\
au3|au3|AutoIt|#AutoIt|lexer==>au3;;\
tcl|tcl itcl exp|#Tcl/TK|lexer==>tcl;;\
lisp|lsp lisp l|#Lisp|lexer==>lisp;;\
scheme|scm smd ss|#Scheme|lexer==>lisp;;\
vb|vb vbp frm cls ctl pag dsr dob|VB|lexer==>vb;;\
vbscript|vbs dsm|VB Script|lexer==>vbs;;\
freebasic|bas bi pb|lexer==>freebasic;;\
makefile|makefile;Makefile;CMakeLists.txt;*.mak;configure*;*.iface|Makefile|||Ctrl+Shift+F11|lexer==>makefile;;\
text|txt log lst doc diz nfo|Text|||Shift+F11;;\
css|css|lexer==>css;;\
hta|hta|#Html Application|lexer==>hypertext;;\
html|html htm shtm shtml asp jsp htd docbook|Hypertext|html.api|html.abbr|F12|lexer==>hypertext;;\
xml|xml|#XML|||Shift+F12|lexer==>xml;;\
php|php php3 phtml|PHP|php.api|lexer==>hypertext;;\
nsis|nsi nsh|#NSIS||lexer==>nsis;;\
inno|iss|#InnoSetup||lexer==>inno;;\
flagship|prg|#dBase||lexer==>flagship;;\
diff|diff patch|#Difference||lexer==>diff;;\
conf|conf htaccess|#Apache Conf||lexer==>conf;;\
mtexlang|0 936 950 wb|#MTeX language file|lexer==>pascal;;\
gnuplot|gp dem plt gnu|gnuplot drawing|lexer==>pascal;;\
sketch|sk|#sketch drawing|lexer==>cpp;;\
jsplot|plt|#jsplot drawing|lexer==>pascal;;\
lyx|lyx|#LyX document|lexer==>latex;;\
layout|layout lay|#LyX layout|lexer==>cpp;;\
markdown|md mkd text|Markdown|markdown.api|lexer==>markdown;;\
texinfo|texi|#TeXinfo|lexer==>cpp;;\
txt2tags|t2t|#Txt2tags|lexer==>txt2tags;;\
tacl|tacl|#TACL|lexer==>tacl;;\

latex|ltx tex ctx ty dtx sty cls ins fd fdd||tex.api|tex.abbr|lexer==>latex;;\

[Dynamic File Types]:: define dynamic file types
## for those files with unknown extensions, it is possible to determine file types via headers of file contents
## define lua regexpr patterns here for testing file types via the first 10 lines of file contents
## !Warning! Never modify them if you do not know what you are doing...

FTYPE_PATTERNS=\
lua==>--%[%[|package.loadlib|dostring|dofile|pairs%([%w_]+%)|ipairs%(%w+%)|props%[|local function|local%s+[%w_]+=;;\
layout==>\DeclareLaTeXClass;;\
html==>^<%w+>;;\
cpp==>#define|#include|#ifdef|#ifndef|#progma|typedef%s|void%s|main%s*%(;;\
metapost==>beginfig%s*%([0-9%s]*%)|verbatimtex|btex|etex;;\
pascal==>program%s+|uses%s+|writeln%s*%(;;\
gnuplot==>set%s+term|set%s+[xyt]lab|set%s+[xyt]ran|set%stit|show%s|replot|reset;;\
makefile==>%.PHONY|all%s*:|clean%s*:;;\
tex==>\documentclass|\documentstyle|\usepackage|\begin%{%w+%};;\

[Dynamic Lexer Settings]::define settings related with dynamic lexer mechanism
## For those file types without builtin lexers, we implement a mechanism of "dynamic lexer".
## For example, gnuplot files have no precompiled lexer,but we can use an existing lexer, e.g. pascal.
## However, since pascal files have different lexer settings from those of gnuplot files, 
## we need to save original pascal settings before we really use lexer pascal for gnuplot files 
## and then restore original pascal settings if we are editing real pascal files.
## For this dynamic lexer mechanism, please define properties to save for original lexers.

LEXER_PROPERTIES=\
comment.block.lexer;;\
comment.block.at.line.start.lexer;;\
comment.stream.start.lexer;;\
comment.stream.end.lexer;;\
comment.box.start.lexer;;\
comment.box.middle.lexer;;\
comment.box.end.lexer;;\


[Function Patterns]:: define function patterns
## you may define lua regexpr patterns here to easily check outline of files
## !Warning! Never modify them if you do not know what you are doing...

PATTERN_ARGS=%s+(([%w_:]+)%s*%(?[%w%s_,=%$%[%]]*%)?)

PATTERNS_tex=\
\documentclass.*;;\
\title%s*{.*;;\
\part%s*{..-};;\
\chapter%s*{..-};;\
\section%s*{..-};;\
\subsection%s*{..-};;\
\subsubsection%s*{..-};;\
\subsubsubsection%s*{..-};;\
\begin%s*{slide};;\
\begin%s*{frame};;\
\begin%s*{table.*};;\
\begin%s*{figure.*};;\
\input.*;;\
\include.*;;\
\begin%s*{thebibliography};;\

PATTERNS_latex=$(PATTERNS_tex)

PATTERNS_lua=\
function$(PATTERN_ARGS);;\
(.*function%(.*%));;\
--(.*)::;;\

PATTERNS_pascal=\
function%s+(([%w_:]+)%s*%(?[%w%s_,:;=%$%[%]]*%)?);;\
procedure%s+(([%w_:]+)%s*%(?[%w%s_,:;=%$%[%]]*%)?);;\

PATTERNS_rlab=\
([%w_]+)%s*=%s*function%s*%(.*%);;\

PATTERNS_matlab=\
function%s.+=%s*([%w_]+);;\
function%s*([%w_]+)[%(%s]*;;\

PATTERNS_cpp=\
%s+(([%w_:*]+)%s*%([%w_,*%s]*%))%s*%{?;;\

PATTERNS_asm=\
%w+%s*proc%s*;;\
(%w+:)%s*$;;\

PATTERNS_batch=\
(%w+:)%s*$;;\

PATTERNS_bib=\
@%w+%{%s*([%w_]+)%s*,;;\

PATTERNS_bst=\
FUNCTION%s*%{(.*)%};;\

PATTERNS_metapost=\
(beginfig%(%d+%));;\

PATTERNS_metafont=\
def$(PATTERN_ARGS);;\

PATTERNS_vb=\
[Ss][Uu][Bb]$(PATTERN_ARGS);;\

PATTERNS_vbscript=\
[Ss][Uu][Bb]$(PATTERN_ARGS);;\

PATTERNS_phpscript=\
function$(PATTERN_ARGS);;\

PATTERNS_euphoria=\
function$(PATTERN_ARGS);;\
procedure$(PATTERN_ARGS);;\

PATTERNS_autoit=\
Func$(PATTERN_ARGS);;\

PATTERNS_asy=\
%s+(([%w_]+)%s*%([%w%s_,=]-%))%s*%{?%s*$;;\
%s+(([%w_]+)%s*%([%w%s_,=]-%))%s*%{?%s*//.+$;;\

PATTERNS_py=\
def$(PATTERN_ARGS);;\

PATTERNS_java=\
public%s*(.+)%{?;;\
private%s*(.+)%{;;\
(class%s.+)%{?;;\

PATTERNS_js=\
function$(PATTERN_ARGS);;\

PATTERNS_nsis=\
%s*Section%s+(.+);;\

PATTERNS_inno=\
function$(PATTERN_ARGS);;\
procedure$(PATTERN_ARGS);;\
%[%w+%]%s*$;;\

PATTERNS_forth=\
%s*:%s*([%-%w_]+);;\

PATTERNS_props=\
%[%w%w%w.-%]%s*;;\

PATTERNS_css=\
([%w.#-_]+)[%s}]-%b{};;\

PATTERNS_html=\
<[hH][eE][aA][dD]%s*.*>;;\
<[hH][tT][mM][lL]%s*.*>;;\
<[cC][oO][dD][eE]%s*.*>;;\
<[pP][rR][eE]>;;\
<[hH][1-9]%s*.*>(.*)</[hH][1-9]>;;\
<[dD][iI][vV]%s*.*>;;\
<[sS][cC][iI][pP][tT].*>;;\
<[fF][oO][rR][mM]%s*.*>;;\

PATTERNS_batch=\
^:([%w.#-_]+)%s*;;\

PATTERNS_text=\
%#%#.*;;\
==\
.*;;\
%[.+%]%s*$;;\


[Insertable Properties]:: define properties list for convenient inserting with Ctrl+Alt+P
SCITE_PROPERTIES=\
CurrentDate;;\
CurrentTime;;\
CurrentDateTime;;\
FileWebPath;;\
FilePath;;\
FileNameExt;;\
FileName;;\
FileExt;;\
FileDir;;\
SciteDefaultHome;;\
code.page;;\
open.filter;;\

[Related Extensions]:: Define related file extensions (Shift+F9)
RELATED_EXTS=\
bpr c cpp cxx h hpp;;\
lua lux;;\
ltx tex ctx log ilg blg bib;;\
TpX mp tpx;;\
ex exw e ew;;\
dpr pp Unit*.pas;;\
rc dpr cpp asm;;\

[Web Settings]:: define default browser, http server root, and search engines
WEB_ROOT=d:\myweb

WEB_SITES=\
google==>http://www.google.com/search?q=%s;;\
baidu==>http://www.baidu.com/s?wd=%s;;\
opera_encyclopedia==>http://redir.opera.com/encyclopedia/?query=%s;;\
opera_translation==>http://redir.opera.com/translation/?text=%s&from=cn&to=en;;\
opera_dictionary==>http://redir.opera.com/dictionary/?query=%s;;\
iciba==>http://www.iciba.com/%s;;\


[Help Commands]:: define what to invoke if you press F1 key
HELP_*=
HELP_asm=$(MYDOCS)\win32asm.chm
HELP_tex=$(MTEX)\doc\latexhelpbook.chm
HELP_cpp=http://www.cplusplus.com/query/search.cgi?q=$[CurrentWord]
HELP_vb=${POWERBASIC}\pbwin.hlp

[Print Commands]:: define how to print for each file type
#~ PRINT_*=
#~ PRINT_ps=
