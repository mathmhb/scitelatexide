## you can edit default options and paths of utils/compilers here
[Common]
## root path for those utils not available in MTeX
MYROOT=d:
## for non-MTeX users (USE_MTEX=0)
MICTEX=d:\mictex
MIKTEXBIN=$(MICTEX)\miktex\miktex\bin
MYUTILS=C:\PROGRA~1
## for MTeX users (USE_MTEX=1)
#~ MTEX=$(SciteDefaultHome)\..\..
if USE_MTEX
	MYUTILS=$(MTEX)\utils


[Environment Variables]:: set your own local environment variables here
## cool new property: you can list environment variables here like set.env.vars=XX;YY;ZZ;... (case sensitive!)
## these variables will be created or modified by the editor automatically
set.env.vars=Path;CPATH;LIBRARY_PATH;INCLUDE;LIB;TEXMFCNF;DJGPP;WATCOM;EUDIR
## please provide values of env vars below: to set env var XXX, you need to provide property env.XXX

##setting internal PATH environment variable so that changing global PATH is net necessary in Sc1IDE
env.Path=$(MTEX)\utils\luacv;$(MTEX)\utils\mingw\bin;$(ARMGCC);$(AVRGCC);$(MSYS);$(MINGW);$(TINYC);$(LCC);$(BCC);$(MSVC);$(MASM32);$(GSVIEW);$(TPX);$(ASY);$(GNUPLOT);$(SUMATRAPDF);$(MTEX)\bin;$(MTEX)\utils\mingw\bin;$(CUDA)\bin;$(CUDASDK)\bin\win32\EmuRelease;$(GTKMM)\bin;$(MIKTEXBIN);"$(SciteDefaultHome)";$(env_Path)

##settings for MinGW GCC/G++ compiler: directories for header files and library files 
env.CPATH=.;..;$(env_CPATH);$(INCS)
env.LIBRARY_PATH=.;..;$(env_LIBRARY_PATH);$(LIBS)

##settings for MSVC compiler 
env.INCLUDE=$(env_INCLUDE);$(INCS)
env.LIB=$(env_LIB);$(LIBS)

##settings for misc C/C++ compilers, scripting languges, ...
env.DJGPP=$(DJGPP)\..\djgpp.env
env.WATCOM=$(WATCOMC)\..
env.EUDIR=$(EUPHORIA)\..

##settings for MTeX to let kpathsea.dll know where to find file texmf.cnf
if USE_MTEX
	env.TEXMFCNF=$(MTEX)\bin


[C/C++ Include and Library Folders]:: set your folders for C/C++ header files and library files
##by default, we use MinGW compilers;if you use other compiler, change the settings below
INCS=$(MINGW)\..\include;$(MTEX)\utils\mingw\include;$(GTKMM)\include
LIBS=$(MINGW)\..\lib;$(MTEX)\utils\mingw\lib;$(GTKMM)\lib

##these folders will be used for searching selected functions in headers/libraries
LIBS_FOR_GREP=$(LIBS)
INCS_FOR_GREP=$(INCS)

##define base path of seperate libraries
GTKMM=c:\gtkmm



[Web Server]
WEBROOT=D:/webroot
MYSQL=$(MYROOT)\mysql\bin
APACHE=$(MYROOT)\apache\bin
PHP=$(MYROOT)\php6
PHPBEAUTIFIER=$(MYROOT)\PHP_Beautifier-0.1.14

[Debug Settings]
#set up whether to generate exe file with debug info (you can use GDB to debug programs compiled by TinyC and Mingw!)
GEN_DEBUG=1
#set up default debug options
if 1
	TINYC.DEBUG=
	MINGW.DEBUG=-O2
	DJGPP.DEBUG=-O2
	BCC.DEBUG=-O
	LCC.DEBUG=
	MSVC.DEBUG=/Ox
	WATCOMC.DEBUG=
	MASM32.DEBUG=
	TASM32.DEBUG=
	TURBOPASCAL.DEBUG=
	FREEPASCAL.DEBUG=
	DELPHI.DEBUG=
	FREEBASIC.DEBUG=
if GEN_DEBUG
	TINYC.DEBUG=-g
	MINGW.DEBUG=-g
	DJGPP.DEBUG=-g
	BCC.DEBUG=-v
	LCC.DEBUG=-g5
	MSVC.DEBUG=/Zi
	NVCC.DEBUG=-g 
	WATCOMC.DEBUG=-g2
	MASM32.DEBUG=/Zd /Zi
	TASM32.DEBUG=/zi
	TURBOPASCAL.DEBUG=-$D+
	FREEPASCAL.DEBUG=-g
	DELPHI.DEBUG=-$D+
	FREEBASIC.DEBUG=-g

[Masm32 Default Resource Object]
#set up default resource object file
MASM32.RESOBJ=
#MASM32.RESOBJ=rsrc.obj

[Maker Commands]
#define default maker: I often use MSYS and Mingw! You can also choose other makers:-)
#~ MAKER=$(MAKER.MSYS)
MAKER=make
#here are available makers from several compilers
MAKER.POMAKE=$(MTEX)\bin\pomake.exe
MAKER.MSYS=d:\msys\bin\make.exe
MAKER.MINGW=$(MAKER.MSYS)
MAKER.DJGPP=$(DJGPP)\make.exe
MAKER.BCC=$(BCC)\make.exe
MAKER.TASM=$(TASM)\make.exe
MAKER.LCC=$(LCC)\make.exe
MAKER.MSVC=$(MSVC)\nmake.exe
MAKER.WATCOMC=$(WATCOMC)\make.exe
MAKER.PELLESC=$(PELLESC)\pomake.exe
MAKER.FREEPASCAL=$(FREEPASCAL)\make.exe

[CMAKE]
CMAKE=$(MYROOT)\cmake\bin
#~ CMAKE.OPTS=-G "MinGW Makefiles"
CMAKE.OPTS=-G "MSYS Makefiles"


[Mingw C/C++]
MSYS=$(MYROOT)\msys\bin
MINGW=$(MYROOT)\mingw\bin
MINGW.OPTS=$(MINGW.DEBUG) $(MINGW.OPTS.DEFS) $(MINGW.OPTS.INCS) $(MINGW.OPTS.LIBS) $(MINGW.OPTS.WIN) $(MINGW.OPTS.GCC3) $(MINGW.OPTS.STATICLIBS) -x none 
MINGW.OPTS.DEFS=-DSDL_main=main 
MINGW.OPTS.INCS=-I. -I.. -I$(MTEX)\utils\mingw\include -I$(MINGW)\..\include -I$(MINGW)\..\include\SDL 
MINGW.OPTS.LIBS=-L$(MTEX)\utils\mingw\lib 
MINGW.LIBS=$(LIB.FLTK) $(LIB.OPENCV) $(LIB.LUA) $(LIB.EBASE) $(LIB.SQLITE) $(LIB.GSL) $(LIB.AGG) $(LIB.FT) $(LIB.SDL) $(LIB.YARP) $(LIB.GTKMM) $(LIB.STDCPP) $(LIB.W32) 

## Uncomment below to build windows GUI applications
MINGW.OPTS.WIN=-mwindows 

## Uncomment below if you use GCC 3.x; don't use it for latest GCC 4+
#~ MINGW.OPTS.GCC3=mno-cygwin  

## Uncomment below to link static stdc++ and gcc libraries
#~ MINGW.OPTS.STATICLIBS=-static-libstdc++ -static-libgcc 

## basic libraries for almost all Windows applications
LIB.STDCPP=-lstdc++
LIB.W32=-lmingw32 -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid  -lcomctl32 -lcomdlg32 -ladvapi32 -lwsock32 -lwinmm -lglu32 -lopengl32

## Uncomment below to build applications using FLTK (portable GUI/images/zipping)
#~ LIB.FLTK=-lfltk_forms -lfltk_images -lfltk_png -lfltk_z -lfltk_jpeg -lfltk

## Uncomment below to build applications using OpenCV2.1 (image processing)
#~ LIB.OPENCV=-lcv210 -lcvaux210 -lcxcore210 -lcxts210 -lhighgui210 -lml210 -lopencv_ffmpeg210

## Uncomment below to build applications using OpenCV2.2 (image processing)
#~ LIB.OPENCV=-lopencv_core220 -lopencv_imgproc220 -lopencv_highgui220 -lopencv_ml220 -lopencv_video220 -lopencv_features2d220 -lopencv_calib3d220 -lopencv_objdetect220 -lopencv_contrib220 -lopencv_legacy220 -lopencv_flann220

## Uncomment below to build applications using Lua (embedded scripting language)
#~ LIB.LUA=-llua

## Uncomment below to build applications using ebase (embedded database)
#~ LIB.EBASE=-lebase

## Uncomment below to build applications using SQLite (embedded database)
#~ LIB.SQLITE=-lsqlite3

## Uncomment below to build applications using GSL (scientific computing)
#~ LIB.GSL=-lgsl -lgslcblas

## Uncomment below to build applications using AGG (2D graphics/scientific plotting)
#~ LIB.AAG=-lagg

## Uncomment below to build applications using FreeType (font engine)
#~ LIB.FT=-lfreetype

## Uncomment below to build applications using SDL (simple directmedia layer)
#~ LIB.SDL=-lsdl -lsdlmain

## Uncomment below to build applications using GLUT (OpenGL Utility Toolkit)
#~ LIB.GLUT=-lglut32win

## Uncomment below to build applications using ODE (game physics engine)
#~ LIB.ODE=-lode

## Uncomment below to build applications using QT (graphical user interface)
#~ LIB.QT=-lqt

## Uncomment below to build applications using ACE (adaptive communication environment)
#~ LIB.ACE=-lACE

## Uncomment below to build applications using YARP (Yet Another Robotics Platform)
#~ LIB.YARP=-lYARP_dev -lYARP_init -lYARP_math -lYARP_name -lYARP_OS -lYARP_sig

## Uncomment below to build applications using QT (graphical user interface)
#~ LIB.GTKMM=-latk-1.0 -latkmm-1.6 -lcairo -lcairomm-1.0 -lexpat -lfontconfig -lfreetype -lgailutil -lgdk_pixbuf-2.0 -lgdkmm-2.4 -lgdk-win32-2.0 -lgio-2.0 -lgiomm-2.4 -lglade-2.0 -lglademm-2.4 -lglib-2.0 -lglibmm-2.4 -lglibmm_generate_extra_defs-2.4 -lgmodule-2.0 -lgobject-2.0 -lgthread-2.0 -lgtkmm-2.4 -lgtk-win32-2.0 -lintl -lpango-1.0 -lpangocairo-1.0 -lpangoft2-1.0 -lpangomm-1.4 -lpangowin32-1.0 -lpng14 -lsigc-2.0 -lxml2 -lxml++-2.6 -lz

#~ LIB.GTKMM=-lglademm-2.4 -lgtkmm-2.4 -lglade-2.0 -lgiomm-2.4 -lgdkmm-2.4 -latkmm-1.6 -lpangomm-1.4 -lcairomm-1.0 -lglibmm-2.4 -lsigc-2.0 -lgtk-win32-2.0 -lxml2 -lz -lgdk-win32-2.0 -latk-1.0 -lgio-2.0 -lgdk_pixbuf-2.0 -lpangowin32-1.0 -lgdi32 -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -lglib-2.0 -lintl


[Djgpp C/C++]
DJGPP=$(MYROOT)\djgpp\bin
DJGPP.OPTS=$(DJGPP.DEBUG)
DJGPP.LIBS=

[LCC Win32]
LCC=$(MYROOT)\lcc\bin
LCC.OPTS=$(LCC.DEBUG)
LCC.LIBS=

[Pelles C]
PELLESC=$(MYROOT)\PellesC\bin
PELLESC.OPTS=/V1 /O1 $(PELLESC.DEBUG)
PELLESC.LIBS=

[Microsoft Visual C++]
MSVC=$(MYROOT)\vc6\bin
MSVC=$(MYROOT)\vc2008\bin
MSVC.OPTS=/I$(MSVC)\include /I$(MSVC)\atlmfc\include /I$(MSVC)\PlatformSDK\include /I. /I.. $(MSVC.DEBUG)
MSVC.LIBS=

[Intel C/C++]
INTELC=$(MYROOT)\icc\bin
INTELC.OPTS=$(INTELC.DEBUG)
INTELC.LIBS=

[Ch C/C++]
CH=$(MYROOT)\ch\bin
CH.OPTS=$(CH.DEBUG)
CH.LIBS=

[Lightweight C++]
LWC=$(MYROOT)\lwc\bin
LWC.OPTS=$(LWC.DEBUG)
LWC.LIBS=

[Borland C++]
BCC=$(MYROOT)\borland\bcc55\bin
BCC.OPTS=-I$(BCC)\..\include -I. -I.. -L$(BCC)\..\lib -L. -L.. $(BCC.DEBUG)
BCC.LIBS=

[Turbo C (DOS)]
TURBOC=$(MYROOT)\borland\tc
TURBOC.OPTS=$(TURBOC.DEBUG)
TURBOC.LIBS=

[Micro C (DOS)]
MICROC=$(MYROOT)\mc
MICROC.OPTS=$(MICROC.DEBUG)
MICROC.LIBS=

[Tiny C]
TINYC=$(MYROOT)\tcc
TINYC_EXE=tinyc.exe
TINYC.OPTS=$(TINYC.DEBUG) -v
TINYC.LIBS=

[Watcom C/C++]
WATCOMC=$(MYROOT)\watcom\binnt
WATCOMC.OPTS=$(WATCOMC.DEBUG)
WATCOMC.LIBS=

[UnderC Windows]
UNDERC=$(MYROOT)\ucw
UNDERC.OPTS=$(UNDERC.DEBUG)
UNDERC.LIBS=

[Nvidia CUDA]
CUDA=$(MYROOT)\cuda\bin
CUDASDK=$(MYROOT)\cuda-sdk
NVCC.OPTS=$(NVCC.DEBUG) $(NVCC.EMU) -ccbin "$(MSVC)" -Xcompiler /I$(MSVC)\include,/I$(MSVC)\atlmfc\include,/I$(MSVC)\PlatformSDK\include,/I.,/I..,/I$(CUDASDK)\common\inc,/I$(CUDA)\..\include -L $(CUDA)\..\lib -L $(CUDASDK)\lib -l cudart,cuda,cublas,cufft,cutil32
NVCC.LIBS=
##uncomment below to add your *.cpp files to link with *.cu files
#~ NVCC.CPPS=*.cpp
##comment below to use real GPU rather than Emulated GPU
NVCC.EMU=-deviceemu

[ARMGCC C/C++]
ARMGCC=D:\arm-gcc\bin
ARMGCC.OPTS=-Wall -D_DEBUG -D__LINUX__ -DRS485 -I$(MultiFlexNG)\include
ARMGCC.LIBS= -L$(MultiFlexNG)\lib -lpthread -lmsr -lmad -lmfng 

##settings for my InnoStar PXA270
MultiFlexNG=$(ARMGCC)\..\MultiFlexNG

[AVRGCC C/C++]
AVRGCC=D:\avr-gcc\bin
AVRGCC.OPTS=$(AVRGCC.DEBUG)
AVRGCC.LIBS=
AVR_AS.OPTS=
AVR_AS.LIBS=
##settings for my InnoStar ATmega128
MultiFlex2=$(AVRGCC)\..\MultiFlex2
##settings for STK500 ISP
STK500=$(AVRGCC)\..\STK500
STK500.OPTS=-d ATmega16 -if 

[Keil C51]
C51=D:\C51\bin
C51.OPTS=$(C51.DEBUG)
C51.LIBS=$(C51)\..\lib\C51S.lib
BL51.OPTS=
A51.OPTS=
##settings for my LJD-SY-5100S
STC_DOWNLOADER=D:\stc-isp\stc-isp.exe

[SDCC]
SDCC=D:\SDCC\bin
SDCC.OPTS=$(SDCC.DEBUG)
SDCC.LIBS=
ASX8051.OPTS=
ASX8051.LIBS=

[GAVRASM]
GAVRASM=d:\gavrasm
GAVRASM.OPTS=$(GAVRASM.DEBUG)
GAVRASM.LIBS=

[Delphi]
DELPHI=$(MYROOT)\borland\d7
DELPHI.OPTS=-DUSE_DROPDOWNCOUNT $(DELPHI.DEBUG)
KOL=$(DELPHI)\kol

[Turbo Pascal]
TURBOPASCAL=$(MYROOT)\borland\tp\bin
TURBOPASCAL.OPTS=$(TURBOPASCAL.DEBUG)

[Free Pascal]
FREEPASCAL=$(MYROOT)\PP\bin\win32
FREEPASCAL.OPTS=$(FREEPASCAL.DEBUG)

[Visual Pascal]
VISUALPASCAL=$(MYROOT)\vp\bin.w32
VISUALPASCAL.OPTS=$(VISUALPASCAL.DEBUG)

[GNU P2C]
P2C=$(MYROOT)\p2c
P2C.OPTS=

[Free Basic]
FREEBASIC=$(MYROOT)\freebasic
FREEBASIC.OPTS=-v $(FREEBASIC.DEBUG)

[Power Basic]
POWERBASIC=$(MYROOT)\powerbasic
POWERBASIC.OPTS=-v $(POWERBASIC.DEBUG)

[QBasic (DOS)]
QBASIC=$(MYROOT)\qbasic
QBASIC.OPTS=

[Masm32 Windows]
MASM32=$(MYROOT)\masm32\bin
MASM32.OPTS=/coff /I$(MASM32)\..\include $(MASM32.DEBUG)
MASM32.LIBS=$(MASM32.RESOBJ)
RC.OPTS=/v /i$(MASM32)\..\include 
CVTRES.OPTS=/out:rsrc.obj
LINK32.OPTS=/OPT:NOREF /LIBPATH:$(MASM32)\..\lib

[Masm (DOS)]
MASM=$(MYROOT)\masm
MASM.OPTS=
MASM.LIBS=
LINK.OPTS=

[TASM (DOS)]
TASM=$(MYROOT)\borland\tasm\bin
TASM.OPTS=$(TASM.DEBUG)
TASM.LIBS=
TLINK.OPTS=

[TASM32 DOS/Win]
TASM32=$(TASM)
TASM32.OPTS=$(TASM32.DEBUG)
TASM32.LIBS=
TLINK32.OPTS=
[Turbo Debugger]
TDW=$(TASM32)
[GoAsm Assembler]
GOASM=$(MYROOT)\goasm
GOASM.OPTS=$(GOASM.DEBUG)
GOASM.LIBS=

[FASM--Flat Assembler Windows]
FASM=$(MYROOT)\fasm
FASM.OPTS=$(FASM.DEBUG)
FASM.LIBS=

[NASM--The Netwide Assembler Windows]
NASM=$(MYROOT)\nasm
NASM.OPTS=$(NASM.DEBUG)
NASM.LIBS=

[GNU Common Lisp]
GCL=$(MYROOT)\gcl\bin
GCL_EXE=gcl.bat
GCL.OPTS=

[GNU Prolog]
GPROLOG=$(MYROOT)\gnu-prolog\bin
GPROLOG.OPTS=
GPROLOG_EXE=gprolog.exe

[B Proglog]
BPROLOG=$(MYROOT)\bprolog
BPROLOG_EXE=bp.bat
BPROLOG.OPTS=

[SWI Prolog]
SWIPROLOG=$(MYROOT)\pl\bin
SWIPROLOG_EXE=plwin.exe
SWIPROLOG.OPTS=

[StrawBerry Prolog]
SBPROLOG=$(MYROOT)\SBP
SBPROLOG_EXE=prolog.exe
SBPROLOG.OPTS=

[K Prolog]
# http://www.binnetcorp.com/OpenCode/kernelprolog.html
KPROLOG=$(MYROOT)\kprolog
KPROLOG_EXE=go.bat

[Idle Language]
IDLE=$(MYROOT)\idle\bin
IDLE.OPTS=

[Euphoria Lanugage]
EUPHORIA=$(MYROOT)\euphoria\bin

[Perl Language]
PERL=$(MYROOT)\perl

[Python Language]
PYTHON=$(MYROOT)\python

[AutoIt Language]
AUTOIT=$(MYROOT)\autoit

[BigForth]
BIGFORTH=$(MYROOT)\bigforth
BIGFORTH.OPTS=

[GNU GForth]
GFORTH=$(MYROOT)\gforth

[ForthCmp (DOS)]
FORTHCMP=$(MYROOT)\4th

[dsForth]
DSFORTH=$(MYROOT)\dsforth
DSFORTH_EXE=ds2c.exe


[Tidy Util]
TIDY=$(MTEX)\utils\tidy
TIDY.OPTS=-i -wrap 0 -m 


[Browsers]
OPERA=$(MYROOT)\opera
FIREFOX=$(MYROOT)\firefox
KMELLON=$(MYROOT)\K-Mellon
IEXPLORE=c:\Program Files\Internet Explorer
THEWORLD=$(MYROOT)\_tools\theworld
LOTRIX=$(MYROOT)\_tools\lotrix
CHROME=c:\Program Files\Chrome
SAFARI=c:\Program Files\Safari

[Matlab]
MATLAB=$(MYROOT)\MATLAB\bin\win32
MATLAB.OPTS=-nosplash -nodesktop -minimize

[Scilab]
SCILAB=$(MYROOT)\SCILAB\bin
SCILAB.OPTS=

[Octave]
OCTAVE=$(MYROOT)\OCTAVE\bin
OCTAVE.OPTS=

[MLab]
MLAB=$(MYROOT)\MLAB\bin
MLAB.OPTS=

[RLab]
RLAB=$(MYUTILS)\rlab\bin
RLAB.OPTS=

[Ox]
OX=$(MYUTILS)\ox\bin
OX.OPTS=

[Yacas]
YACAS=$(MYUTILS)\yacas
YACAS.OPTS=

[Yorick]
YORICK=$(MYUTILS)\yorick\bin
YORICK.OPTS=

[R]
R=$(MYROOT)\R\bin

[S Plus]
SPLUS=$(MYROOT)\Splus\bin
SPLUS.OPTS=

[Nullsoft Installer]
NSIS=$(MYROOT)\NSIS
NSIS.OPTS=

[Inno Installer]
INNO=$(MYROOT)\InnoSetup
INNO.OPTS=

[SVN Subversion]
SVN=$(MTEX)\utils\svn
SVN_EXE=svn.exe
SVN.OPTS=
SVN_Root=
##change the following setting to hold your username/password
#~ SVN_Login=--username user --password pass

[Lua]
LUA_EXE=lua.exe
LUAC_EXE=luac.exe

[TeX/LaTeX Options]
#set up options for latex/pdflatex/tex once!
LATEX1.OPTS=-interaction=nonstopmode -src
PDFLATEX1.OPTS=-interaction=nonstopmode -synctex=-1
XELATEX1.OPTS=-interaction=nonstopmode -synctex=-1
TEX1.OPTS=-interaction=nonstopmode -src
[TMac]
TMAC=$(SciteDefaultHome)\tmac
if USE_MTEX
	TMAC=$(MTEX)\bin
[BibX]
BIBX=$(SciteDefaultHome)\bibx
if USE_MTEX
	BIBX=$(MTEX)\bin
[TexBmp]
TEXBMP=$(SciteDefaultHome)\texbmp
if USE_MTEX
	TEXBMP=$(MTEX)\bin
[TexFriend]
TEXFRIEND=$(MICTEX)\Misc Tools\texfriend
[TeXaide]
TEXAIDE=$(MYUTILS)\texaide
[Metapath]
METAPATH=$(SciteDefaultHome)\metapath
[TpX]
TPX=$(MICTEX)\Misc Tools\TpX
if USE_MTEX
	TPX=$(MTEX)\utils\tpx
[Asy]
ASY=$(MICTEX)\Asymptote
if USE_MTEX
	ASY=$(MYUTILS)\asy
[Gnuplot]
GNUPLOT=$(MYUTILS)\gnuplot
[BibEdit]
BIBEDIT=$(MYUTILS)\bibedit
[JabRef]
JABREF=$(MICTEX)\Misc Tools\Jar
if USE_MTEX
	JABREF=$(MYUTILS)\jabref
[PPower]
PPOWER=$(MICTEX)\Misc Tools\Jar
if USE_MTEX
	PPOWER=$(MYUTILS)\ppower
[JaxoDraw]
JAXODRAW=$(MICTEX)\Misc Tools\Jar
if USE_MTEX
	JAXODRAW=$(MYUTILS)\jaxodraw
[Geogebra]
GEOGEBRA=$(MICTEX)\Misc Tools\Jar
if USE_MTEX
	GEOGEBRA=$(MYUTILS)\geogebra
[GsView]
GSVIEW=$(MICTEX)\Viewers
if USE_MTEX
	GSVIEW=$(MYUTILS)\gsview
[Latex2Rtf]
LATEX2RTF=$(MTEX)\utils\l2r
[Aspell]
ASPELL=$(MICTEX)\Misc Tools\Aspell\bin
ASPELL.OPTS= --lang=en-US -t -c
if USE_MTEX
	ASPELL=$(MTEX)\utils\aspell
[SumatraPDF]
SUMATRAPDF=$(MICTEX)\Viewers
if USE_MTEX
	SUMATRAPDF=$(MTEX)\utils\sumatrapdf
[SmartTeXer]
SMARTTEXER_EXE=SmartTeXer.exe
